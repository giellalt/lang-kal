# -*- cg-pre-pipe: "hfst-tokenise -g ../../tools/tokenisers/tokeniser-gramcheck-gt-desc.pmhfst" -*-
# Divvun & Giellatekno - open source grammars for Sámi and other languages
# Copyright © 2000-2017 UiT The arctic University of Norway
# http://giellatekno.uit.no & http://divvun.no
#
# This program is free software; you can redistribute and/or modify
# this file under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version. The GNU General Public License
# is found at http://www.gnu.org/licenses/gpl.html. It is
# also available in the file $GTHOME/LICENSE.txt.
#
# Other licensing options are available upon request, please contact
# giellatekno@hum.uit.no or divvun@hum.uit.no

# ==================================================================== #
#!! #      G R E E N L A N D I C   G R A M M A R   C H E C K E R
# ==================================================================== #
# ====================================================================

#  Sámi language technology 2000-2017, UiT The arctic University of Norway #

# ---------------------- #
#   Development setup:   #
# ---------------------- #
#
#!! ```
#!!  In the catalogue for kal, do:
#!!  ./autogen.sh
#!!  ./configure --enable-grammarchecker --enable-spellers
#!!  make -j
#!!  cd tools/grammarcheckers
#!!  make dev
#
#!!   Then test as follows:  
#
#!! echo "e Nerisassiornermut soqutigisaqarpit?|sh modes/trace-kalgram.mode  # from the terminal
#!!
#!! Or eventually, write
#!! `make check`
#!!




#!! ## Tag declaration

#!! ### Import tag declarations
#!! We import tag declaration from `../../src/cg3/tagdeclaration.cg3`
#!! Todo: Make disambiguation.cg3 do the same

INCLUDE ../../src/cg3/tagdeclaration.cg3 ;

#!! Declare tags not declared in disambiguation.cg3
#!! (TODO: Perhaps they should have been declared there as well)

LIST QAR = QAR ; #!!= * @CODE@

#!! ### Tags used only here

LIST QMARK = QMARK ; #!!= * @CODE@

#!! ## Grammarchecker tags

LIST &ellipsis = &ellipsis ;
LIST &guillemets = &guillemets ;
LIST &typo = &typo ;
LIST &msyn-arg-trm-ins = &msyn-arg-trm-ins ;
MAPPING-PREFIX = & ;


#!! ## Rule section

SECTION

# Speller suggestions rule – add &SUGGESTWF to any spelling suggestion
# that we actually want to suggest to the user.
# The simplest is to just add it to all spelled words:
ADD:spell-it-all (&typo &SUGGESTWF) (<spelled>) ;
#!! @RULENAME@ 
# But perhaps you want to only suggest spellings of words that are not inside "quotes":
ADD:spell-conservatively (&typo &SUGGESTWF) (<spelled>) IF (NEGATE -1 QMARK LINK 2 QMARK);
#!! @RULENAME@ 

# A simple grammar checker rule without suggestions: Ensure preceding nominal agrees with the verb
# ADD:msyn-agr (&msyn-agr) TARGET V IF (-1C Sg + Nom) (0 V) (NOT 0 Sg3);
# ADD:msyn-agr (&msyn-agr) TARGET V IF (-1C Pron + Sg1 + Nom) (0 V) (NOT 0 Sg1);
# ADD:msyn-agr (&msyn-agr) TARGET V IF (-1C Pron + Sg2 + Nom) (0 V) (NOT 0 Sg2);
# ADD:msyn-agr (&msyn-agr) TARGET V IF (-1C Pron + Pl1 + Nom) (0 V) (NOT 0 Pl1);
# ADD:msyn-agr (&msyn-agr) TARGET V IF (-1C Pron + Pl2 + Nom) (0 V) (NOT 0 Pl2);

ADD:msyn-arg-trm-ins (&msyn-arg-trm-ins) TARGET N + Trm + Sg IF (1 QAR);
#!! @RULENAME@ 
COPY:msyn-arg-trm-ins (Ins Sg &SUGGEST) EXCEPT (Trm Sg  &msyn-arg-trm-ins) TARGET (&msyn-arg-trm-ins);
#!! @RULENAME@ 

#err Nerisassiornermut soqutigisaqarpit? # er du interesseret til madlavning
#ok  Nerisassiornermik soqutigisaqarpit? # er du interesseret i madlavning


# And one with a suggestion where we simply change the tag Sg into Attr:
# ADD:attr-not-pred (&attr-not-pred) TARGET (A Sg) IF (NOT 0 Attr OR Gen) (1 CC LINK *1 COMMON-N) ;
#COPY:attr-not-pred (Attr &SUGGEST) EXCEPT (Sg) TARGET (&attr-not-pred) ;
# The method is: Add &SUGGEST to a copied reading to *generate* a
# suggestion form from that reading. The copy should contain the error
# tag too – &-prefixed error tags are ignored when generating, but
# used to create human-readable messages.

# Simple punctuation rules showing how to change the lemma in the suggestions:
ADD:use-guillemets (&guillemets) TARGET (""");
#!! @RULENAME@ 
COPY:left-guillemet ("«" &SUGGEST) EXCEPT (""") TARGET (&guillemets) ;
#!! @RULENAME@ 
COPY:right-guillemet ("»" &SUGGEST) EXCEPT (""") TARGET (&guillemets) ;
#!! @RULENAME@ 

ADD:use-ellipsis (&ellipsis) TARGET ("...");
#!! @RULENAME@ 
COPY:use-ellipsis ("…" &SUGGEST) EXCEPT ("...") TARGET (&ellipsis) ;
#!! @RULENAME@ 
