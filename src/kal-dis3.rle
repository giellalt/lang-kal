# =================================================================== #
# =================================================================== #
#     W E S T   G R E E N L A N D I C   D I S A M B I G U A T O R     #
# =================================================================== #
# =================================================================== #

# =========================================== #
#            Short table of contents          #
# =========================================== #

# Delimiters (line 43)
# Tags and sets
	# Positions and household (line 50)
	# Parts of speech (line 60)
	# Derivatives (line 143)
	# Tilhængspartikler (line 812)
	# Syntactic and morphological sets
		# Generelt for alle ordklasser (linie 854)
		# Verber (linie 862)
		# Nominer (linie 885)
		# Partikler (linie 900)
	# Lexical sets (907)
		# Verberne (linie 910)
		# Nominerne (linie 931)
	# Tags (line 965)
# Regelsektion
	# Mapping rules
		# Verber - De sikre MAP regler (1046)
		# Nominer - De sikre MAP regler (1054)
		# Nominer - ADD regler (1062)
		# Adjektiver - både ADD og MAP regler (line 1087)
		# Partikler (1120)
		# Numeralier
	# Disambiguation rules (linie 1175)
		# SELECT og REMOVE verber (
		# SELECT og REMOVE nominer (
                            # One-cohort disambiguation - cycle 0

              # Local disambiguation - cycles 1 
	      # Global disambiguation - cycles 2
              # Syntactic disambiguation


# ========== #
# Delimiters #
# ========== #

DELIMITERS = "<.>" "<!>" "<?>" "<:>" "<...>" "<¶>"; #<¶> virker ikke og må erstattes af LF 


# ============= #
# Tags and sets #
# ============= #

# Positions and household #

LIST BOS = (>>>) (<s>); #sætningsbegyndelse
LIST EOS = (<<<) (</s>); # vislcg and CG-2 together. Sætningsafslutning
LIST CLB = CLB ; # Fra Trond
LIST PUNCT = PUNCT ; # Fra Trond
LIST LEFT = LEFT ; # Fra Trond
LIST RIGHT = RIGHT ; # Fra Trond
LIST COMMONAFFSTRING = \= ;

# Parts of speech with tags declared as single-membered LISTs #

LIST N = N ;
LIST V = V ;
LIST Part = Part ;
LIST Pron = Pron ;
LIST Adj = Adj ;
LIST Adv = Adv ;
LIST Prop = Prop ;
LIST Interj = Interj ;
LIST Num = Num ;
LIST Attr = Attr ;
LIST Abbr = Abbr ;
LIST ACR = ACR ;
LIST Ord = Ord ; # Ordinaltal
LIST Clt = Clt ; # LU og andre
LIST SUB = SUB ;

LIST Sg = Sg ;
LIST Du = Du ;
LIST Pl = Pl ;

LIST Abs = Abs ;
LIST Rel = Rel ;
LIST Trm = Trm ;
LIST Abl = Abl ;
LIST Lok = Lok ;
LIST Aeq = Aeq ;
LIST Ins = Ins ;
LIST Via = Via ;

LIST Ind = Ind ;
LIST Int = Int ;
LIST Imp = Imp ;
LIST Opt = Opt ;
LIST Cau = Cau ;
LIST Con = Con ;
LIST Par = Par ;
LIST Inf = Inf ;
LIST InfNeg = InfNeg ;
LIST Ite = Ite  ;
LIST Vok = Vok ; # vokativ-lignende endelser på pronominer og participium

LIST 1Sg = 1Sg ;
LIST 2Sg = 2Sg ;
LIST 3Sg = 3Sg ;
LIST 4Sg = 4Sg ;
LIST 1Pl = 1Pl ;
LIST 2Pl = 2Pl ;
LIST 3Pl = 3Pl ;
LIST 4Pl = 4Pl ;

LIST 34IV = 3Sg 3Pl 4Sg 4Pl ;
LIST 34Sg = 3Sg 4Sg ;
LIST 34Pl = 3Pl 4Pl ;

LIST 1SgPoss = 1SgPoss ; #Ny tag 22.1.2008
LIST 2SgPoss = 2SgPoss ; #Ny do.
LIST 3SgPoss = 3SgPoss ; #Ny do.
LIST 4SgPoss = 4SgPoss ; #Ny do.
LIST 1PlPoss = 1PlPoss ; #Ny do.
LIST 2PlPoss = 2PlPoss ; #Ny do.
LIST 3PlPoss = 3PlPoss ; #Ny do.
LIST 4PlPoss = 4PlPoss ; #Ny do.

LIST 1SgO = 1SgO ;
LIST 2SgO = 2SgO ;
LIST 3SgO = 3SgO ;
LIST 4SgO = 4SgO ;
LIST 1PlO = 1PlO ;
LIST 2PlO = 2PlO ;
LIST 3PlO = 3PlO ;
LIST 4PlO = 4PlO ;

LIST nn = nn ;
LIST vv = vv ;
LIST nv = nv ;
LIST vn = vn ;

# Derivatives #

LIST ALLAP = ALLAP ;
LIST ALLAP_TIP = ALLAP\=TIP ;
LIST ALLAP_TIP_HTR = ALLAP\=TIP\=HTR ;
LIST ARAQ = ARAQ ;
LIST IAR = IAR ;
LIST IAR_HTR = IAR\=HTR ;
LIST IP = IP ;
LIST IP_QAT_GE = IP\=QAT\=GE ;
LIST INNAQ = INNAQ ;
LIST INNAR = INNAR ;
LIST INNAR_LIR = INNAR\=LIR ;
LIST INNAR_NIAR = INNAR\=NIAR ;
LIST INNAR_QE = INNAR\=QE ;
LIST INNAR_SIMA = INNAR\=SIMA ;
LIST INNAR_SINNAA = INNAR\=SINNAA ;
LIST INNAR_SSA = INNAR\=SSA ;
LIST INNAR_TAR = INNAR\=TAR ;
LIST INNAR_TARIAQAR = INNAR\=TARIAQAR ;
LIST IRUP = IRUP ;
LIST GALLAR = GALLAR ;
LIST GALLAR_TIP = GALLAR\=TIP ;
LIST GALUAR = GALUAR ;
LIST GALUAR_NIAR = GALUAR\=NIAR ;
LIST GASUAR = GASUAR ;
LIST GE = GE ;
LIST GE_HTR = GE\=HTR ;
LIST GIARTUR = GIARTUR ;
LIST GIARTUR_AAR_NIQAR = GIARTUR\=AAR\=NIQAR ;
LIST GIARTUR_GALLAR_SSA = GIARTUR\=GALLAR\=SSA ;
LIST GIARTUR_GASUAR = GIARTUR\=GASUAR ;
LIST GIARTUR_GASUAR_NIAR = GIARTUR\=GASUAR\=NIAR ;
LIST GIARTUR_GUMA = GIARTUR\=GUMA ;
LIST GIARTUR_INNAR = GIARTUR\=INNAR ;
LIST GIARTUR_INNAR_LIR = GIARTUR\=INNAR\=LIR ;
LIST GIARTUR_INNAR_LIR_GALUAR = GIARTUR\=INNAR\=LIR\=GALUAR ;
LIST GIARTUR_INNAR_LIR_GALUAR_SIMA = GIARTUR\=INNAR\=LIR\=GALUAR\=SIMA ;
LIST GIARTUR_INNAR_LIR_SIMA = GIARTUR\=INNAR\=LIR\=SIMA ;
LIST GIARTUR_INNAR_SIMA = GIARTUR\=INNAR\=SIMA ;
LIST GIARTUR_LIR = GIARTUR\=LIR ;
LIST GIARTUR_LIR_QINA = GIARTUR\=LIR\=QINA ;
LIST GIARTUR_NIAR = GIARTUR\=NIAR ;
LIST GIARTUR_PILUUR = GIARTUR\=PILUUR ;
LIST GIARTUR_QATIGIIP = GIARTUR\=QATIGIIP ;
LIST GIARTUR_QATIGIIP_INNAR = GIARTUR\=QATIGIIP\=INNAR ;
LIST GIARTUR_QINA = GIARTUR\=QINA ;
LIST GIARTUR_QQAAR = GIARTUR\=QQAAR ;
LIST GIARTUR_QQAAR_GALLAR = GIARTUR\=QQAAR\=GALLAR ;
LIST GIARTUR_QQAAR_GUMA = GIARTUR\=QQAAR\=GUMA ;
LIST GIARTUR_QQAAR_GUMA_GALUAR = GIARTUR\=QQAAR\=GUMA\=GALUAR ;
LIST GIARTUR_QQU = GIARTUR\=QQU ;
LIST GIARTUR_SIMA = GIARTUR\=SIMA ;
LIST GIARTUR_SSA = GIARTUR\=SSA ;
LIST GIARTUR_SSA_NIR = GIARTUR\=SSA\=NIR ;
LIST GIARTUR_SSA_NNGIT = GIARTUR\=SSA\=NNGIT ;
LIST GIARTUR_SSA_NNGIT_NIR = GIARTUR\=SSA\=NNGIT\=NIR ;
LIST GIARTUR_TAR = GIARTUR\=TAR ;
LIST GIARTUR_TIP = GIARTUR\=TIP ;
LIST GIARTUR_TIP_GUMA = GIARTUR\=TIP\=GUMA ;
LIST GUMA = GUMA ;
LIST GUMA_GUNNAIR = GUMA\=GUNNAIR ;
LIST GUMA_GUNNAIR_TIP = GUMA\=GUNNAIR\=TIP ;
LIST GUMA_LIR = GUMA\=LIR ;
LIST GUMA_LLAARE = GUMA\=LLAARE ;
LIST GUMA_GALUAR = GUMA\=GALUAR ;
LIST GUMA_NNGIT = GUMA\=NNGIT ;
LIST GUMA_NNGIT_GALUAR = GUMA\=NNGIT\=GALUAR ;
LIST GUMA_NNGIT_TAR_INNAR = GUMA\=NNGIT\=TAR\=INNAR ;
LIST GUMA_NNGIT_TAR_INNAR_SSA = GUMA\=NNGIT\=TAR\=INNAR\=SSA  ;
LIST GUMA_SAR = GUMA\=SAR ;
LIST GUMA_SSA = GUMA\=SSA ;
LIST GUMA_SSA_NNGIT = GUMA\=SSA\=NNGIT ;
LIST GUMA_SSA_NNGIT_NIR = GUMA\=SSA\=NNGIT\=NIR ;
LIST GUMA_SSA_NIR = GUMA\=SSA\=NIR ;
LIST GUMA_TU = GUMA\=TU ;
LIST GUMA_TU_VALLAAR = GUMA\=TU\=VALLAAR ;
LIST GUMAAR = GUMAAR ;
LIST GUMAAR_NIR = GUMAAR\=NIR ;
LIST GUNAR = GUNAR ;
LIST GUNNAIR = GUNNAIR ;
LIST GUNNAIR_RIIR = GUNNAIR\=RIIR ;
LIST GUNNAIR_LIR_SIMA = GUNNAIR\=LIR\=SIMA ;
LIST GUNNAIR_INNAR = GUNNAIR\=INNAR ;
LIST GUNNAIR_TIP_GUMA = GUNNAIR\=TIP\=GUMA ;
LIST GUNNAIR_SIMA = GUNNAIR\=SIMA ;
LIST GUNNAIR_SIMA_NNGIT = GUNNAIR\=SIMA\=NNGIT ;
LIST GUNNAIR_SIMA_SSA = GUNNAIR\=SIMA\=SSA ;
LIST GUNNAIR_SIMA_SSA_GALUAR = GUNNAIR\=SIMA\=SSA\=GALUAR ;
LIST GUNNAIR_TIP_SINNAA = GUNNAIR\=TIP\=SINNAA ;
LIST GUNNAIR_SSA = GUNNAIR\=SSA ;
LIST GUNNAIR_TIP = GUNNAIR\=TIP ;
LIST GUNNAIR_TIP_NIAR = GUNNAIR\=TIP\=NIAR ;
LIST GUNNAIR_TIP_SSA = GUNNAIR\=TIP\=SSA ;
LIST GUNNAIR_VIP_SSA = GUNNAIR\=VIP\=SSA ;
LIST GUSUP = GUSUP ;
LIST GUSUP_GALUAR = GUSUP\=GALUAR ;
LIST GUSUP_NNGIT = GUSUP\=NNGIT ;
LIST GUSUP_SINNAA = GUSUP\=SINNAA ;
LIST HTR = HTR  ;
LIST IR = IR  ;
LIST JA = JA ;
LIST KAR = KAR ;
LIST KKUT = KKUT ;
LIST KAAP = KAAP ;
LIST LAAR = LAAR  ;
LIST LAAR_GALLAR = LAAR\=GALLAR ;
LIST LAAR_GALLAR_NIAR = LAAR\=GALLAR\=NIAR ;
LIST LAAR_RIIR = LAAR\=RIIR ;
LIST LAAR_RIIR_SIMA = LAAR\=RIIR\=SIMA ;
LIST LAAR_RIAR = LAAR\=RIAR ;
LIST LAAR_SIMA = LAAR\=SIMA ;
LIST LIK = LIK ;
LIST LIK_TAQ = LIK\=TAQ ;
LIST LIR = LIR ;
LIST LIR_GALUAR = LIR\=GALUAR ;
LIST LIR_GUMA = LIR\=GUMA ;
LIST LIR_GUMAAR = LIR\=GUMAAR ;
LIST LIR_HTR = LIR\=HTR ;
LIST LIR_QE = LIR\=QE ;
LIST LIR_RIIR = LIR\=RIIR ;
LIST LIR_RIIR_SIMA = LIR\=RIIR\=SIMA ;
LIST LIR_RUTTUR = LIR\=RUTTUR ;
LIST LIR_SIMA = LIR\=SIMA ;
LIST LIR_SINNAA = LIR\=SINNAA ;
LIST LIR_SINNAA_QQU = LIR\=SINNAA\=QQU ;
LIST LIR_TAR = LIR\=TAR ;
LIST LIR_TARE = LIR\=TARE ;
LIST LIR_TIP = LIR\=TIP ;
LIST LIR_TIP_GUMAAR = LIR\=TIP\=GUMAAR ;
LIST LIR_TIP_NIAR = LIR\=TIP\=NIAR ;
LIST LIR_TIP_NIQAR = LIR\=TIP\=NIQAR ;
LIST LIR_TIP_HTR = LIR\=TIP\=HTR ;
LIST LIR_VIP = LIR\=VIP ;
LIST LIR_VIP_TARIAQAR = LIR\=VIP\=TARIAQAR ;
LIST LIRSUR = LIRSUR ;
LIST LIRSUR_HTR = LIRSUR\=HTR ;
LIST LISAR = LISAR ;
LIST LIRTUR = LIRTUR ;
LIST LIUR = LIUR ;
LIST LIUR_UTE = LIUR\=UTE ;
LIST LUAR = LUAR ;
LIST LUAR_LIR = LUAR\=LIR ;
LIST LUAR_LIR_RIIR_QQU_GALUAR = LUAR\=LIR\=RIIR\=QQU\=GALUAR ;
LIST LUAR_RIAR = LUAR\=RIAR ;
LIST LUAR_NIAR = LUAR\=NIAR ;
LIST LUAR_SINNAA = LUAR\=SINNAA ;
LIST LUAR_SINNAA_LIR = LUAR\=SINNAA\=LIR ;
LIST LUAR_SINNAA_LIR_SIMA = LUAR\=SINNAA\=LIR\=SIMA ;
LIST LUAR_SINNAA_NIQAR = LUAR\=SINNAA\=NIQAR ;
LIST LUAR_SINNAA_NIQAR_PASIP = LUAR\=SINNAA\=NIQAR\=PASIP ;
LIST LUINNAQ = LUINNAQ ;
LIST LUINNAR = LUINNAR ;
LIST LUINNAR_LIR = LUINNAR\=LIR ;
LIST LUINNAR_GUMA = LUINNAR\=GUMA ;
LIST LUINNAR_GUNAR = LUINNAR\=GUNAR ;
LIST LUINNAR_SIMA = LUINNAR\=SIMA ;
LIST LUINNAR_SIMA_GALUAR = LUINNAR\=SIMA\=GALUAR ;
LIST LUINNAR_SIMA_GUNAR = LUINNAR\=SIMA\=GUNAR ;
LIST LUINNAR_SIMA_SSA = LUINNAR\=SIMA\=SSA ;
LIST LUINNAR_GUMAAR = LUINNAR\=GUMAAR ;
LIST MIOQ = MIOQ ;
LIST MIU = MIU ;
LIST NAR = NAR ;
LIST NAR_VALLAAR = NAR\=VALLAAR ;
LIST NAR_VALLAAR_SSA = NAR\=VALLAAR\=SSA ;
LIST NAR_VALLAAR_SSA_NNGIT = NAR\=VALLAAR\=SSA\=NNGIT ;
LIST NAVIAR = NAVIAR ;
LIST NAVIAR_NNGIT = NAVIAR\=NNGIT ;
LIST NIAR = NIAR ;
LIST NIAR_GAJUP = NIAR\=GAJUP ;
LIST NIAR_GALLAR = NIAR\=GALLAR ;
LIST NIAR_GALUAR = NIAR\=GALUAR ;
LIST NIAR_GALUAR_GUMAAR = NIAR\=GALUAR\=GUMAAR ;
LIST NIAR_INNAR = NIAR\=INNAR ;
LIST NIAR_INNAR_LIR = NIAR\=INNAR\=LIR ;
LIST NIAR_LIR = NIAR\=LIR ;
LIST NIAR_LIR_QE = NIAR\=LIR\=QE ;
LIST NIAR_LUAR = NIAR\=LUAR ;
LIST NIAR_NAR = NIAR\=NAR ;
LIST NIAR_NIAR = NIAR\=NIAR ;
LIST NIAR_NIQAR = NIAR\=NIQAR ;
LIST NIAR_NIQAR_QQAAR = NIAR\=NIQAR\=QQAAR ;
LIST NIAR_NIQAR_QQAAR_TAR = NIAR\=NIQAR\=QQAAR\=TAR ;
LIST NIAR_NIQAR_RIIR = NIAR\=NIQAR\=RIIR ;
LIST NIAR_NIQAR_SSA = NIAR\=NIQAR\=SSA ;
LIST NIAR_NIQAR_VALLAAR = NIAR\=NIQAR\=VALLAAR ;
LIST NIAR_NIQAR_VALLAAR_QQU = NIAR\=NIQAR\=VALLAAR\=QQU ;
LIST NIAR_NNGIT = NIAR\=NNGIT ;
LIST NIAR_NNGIT_QE = NIAR\=NNGIT\=QE ;
LIST NIAR_QE = NIAR\=QE ;
LIST NIAR_QQAAR = NIAR\=QQAAR ;
LIST NIAR_QQAAR_SSA = NIAR\=QQAAR\=SSA ;
LIST NIAR_QQU = NIAR\=QQU ;
LIST NIAR_QQU_HTR = NIAR\=QQU\=HTR ;
LIST NIAR_RIAR = NIAR\=RIAR ;
LIST NIAR_SAR = NIAR\=SAR ;
LIST NIAR_SIMA = NIAR\=SIMA ;
LIST NIAR_SIMA_GALUAR = NIAR\=SIMA\=GALUAR ;
LIST NIAR_SIMA_NIR = NIAR\=SIMA\=NIR ;
LIST NIAR_SIMA_NNGIT = NIAR\=SIMA\=NNGIT ;
LIST NIAR_SIMA_NNGIT_NIR = NIAR\=SIMA\=NNGIT\=NIR ;
LIST NIAR_SSA = NIAR\=SSA ;
LIST NIAR_SSA_NIR = NIAR\=SSA\=NIR ;
LIST NIAR_SSA_NNGIT = NIAR\=SSA\=NNGIT ;
LIST NIAR_SSA_NNGIT_NIR = NIAR\=SSA\=NNGIT\=NIR ;
LIST NIAR_TAR = NIAR\=TAR ;
LIST NIAR_TAR_GALUAR = NIAR\=TAR\=GALUAR ;
LIST NIAR_TAR_INNAR = NIAR\=TAR\=INNAR ;
LIST NIAR_TAR_SIMA = NIAR\=TAR\=SIMA ;
LIST NIAR_TAR_SIMA_GALUAR = NIAR\=TAR\=SIMA\=GALUAR ;
LIST NIAR_TARIAQAR = NIAR\=TARIAQAR ;
LIST NIAR_TIP = NIAR\=TIP ;
LIST NIAR_TIP_HTR = NIAR\=TIP\=HTR ;
LIST NIAR_VALLAAR = NIAR\=VALLAAR ;
LIST NIAR_VALLAAR_NIAR = NIAR\=VALLAAR\=NIAR ;
LIST NIP = NIP ;
LIST NIQ = NIQ ;
LIST NIRSAQ = NIRSAQ ;
LIST NIRPAAQ = NIRPAAQ ;
LIST NIRLUP = NIRLUP ;
LIST NIRLUP_NIR = NIRLUP\=NIR ;
LIST NIRLUP_RIATAAR = NIRLUP\=RIATAAR ;
LIST NIRLUP_RIATAAR_SINNAA = NIRLUP\=RIATAAR\=SINNAA ;
LIST NIQAR = NIQAR ;
LIST NIQAR_GALUAR = NIQAR\=GALUAR ;
LIST NIQAR_GALUTTUINNAR = NIQAR\=GALUTTUINNAR ;
LIST NIQAR_GUMA = NIQAR\=GUMA ;
LIST NIQAR_GUMAAR = NIQAR\=GUMAAR ;
LIST NIQAR_GUNNAIR = NIQAR\=GUNNAIR ;
LIST NIQAR_JA = NIQAR\=JA ;
LIST NIQAR_LIR = NIQAR\=LIR ;
LIST NIQAR_LIR_RUTTUR = NIQAR\=LIR\=RUTTUR ;
LIST NIQAR_LUAR = NIQAR\=LUAR ;
LIST NIQAR_LUAR_SINNAA = NIQAR\=LUAR\=SINNAA ;
LIST NIQAR_LUINNAR = NIQAR\=LUINNAR ;
LIST NIQAR_LUINNAR_SINNAA = NIQAR\=LUINNAR\=SINNAA ;
LIST NIQAR_NNGIT = NIQAR\=NNGIT ;
LIST NIQAR_NNGIT_GALUAR = NIQAR\=NNGIT\=GALUAR ;
LIST NIQAR_NNGIT_TAR_INNAR = NIQAR\=NNGIT\=TAR\=INNAR ;
LIST NIQAR_NNGIT_TAR_INNAR_SIMA = NIQAR\=NNGIT\=TAR\=INNAR\=SIMA ;
LIST NIQAR_QQAAR = NIQAR\=QQAAR ;
LIST NIQAR_QQAAR_TARIAQAR = NIQAR\=QQAAR\=TARIAQAR ;
LIST NIQAR_QQAJAR = NIQAR\=QQAJAR ;
LIST NIQAR_QQU = NIQAR\=QQU ;
LIST NIQAR_RIIR = NIQAR\=RIIR ;
LIST NIQAR_SIMA = NIQAR\=SIMA ;
LIST NIQAR_SIMA_TARIAQAR_GUNAR = NIQAR\=SIMA\=TARIAQAR\=GUNAR ;
LIST NIQAR_SIMA_TARIAQAR_GUNAR_GALUAR = NIQAR\=SIMA\=TARIAQAR\=GUNAR\=GALUAR ;
LIST NIQAR_SIMA_TIGE = NIQAR\=SIMA\=TIGE ;
LIST NIQAR_SINNAA = NIQAR\=SINNAA ;
LIST NIQAR_SINNAA_LIR = NIQAR\=SINNAA\=LIR ;
LIST NIQAR_SINNAA_LIR_RIIR = NIQAR\=SINNAA\=LIR\=RIIR ;
LIST NIQAR_SINNAA_SSA = NIQAR\=SINNAA\=SSA ;
LIST NIQAR_SINNAA_SSA_GALUAR = NIQAR\=SINNAA\=SSA\=GALUAR ;
LIST NIQAR_SINNAA_NNGIT = NIQAR\=SINNAA\=NNGIT ;
LIST NIQAR_SSA = NIQAR\=SSA ;
LIST NIQAR_SSA_NNGIT = NIQAR\=SSA\=NNGIT ;
LIST NIQAR_SSA_TIP = NIQAR\=SSA\=TIP ;
LIST NIQAR_TAR = NIQAR\=TAR ;
LIST NIQAR_TAR_QQU = NIQAR\=TAR\=QQU ;
LIST NIQAR_TAR_NNGIT = NIQAR\=TAR\=NNGIT ;
LIST NIQAR_TAR_NNGIT_NIR = NIQAR\=TAR\=NNGIT\=NIR ;
LIST NIQAR_TAR_GALUAR = NIQAR\=TAR\=GALUAR ;
LIST NIQAR_TAR_SIMA = NIQAR\=TAR\=SIMA ;
LIST NIQAR_TAR_SSA = NIQAR\=TAR\=SSA ;
LIST NIQAR_TIGE_SIMA_NIR = NIQAR\=TIGE\=SIMA\=NIR ;
LIST NIQAR_TIP = NIQAR\=TIP ;
LIST NIQAR_TSAALI = NIQAR\=TSAALI ;
LIST NIQAR_TSAALI_UR = NIQAR\=TSAALI\=UR ;
LIST NIQAR_TSAALI_UR_NIQAR = NIQAR\=TSAALI\=UR\=NIQAR ;
LIST NIQAR_TSAALI_UR_NIQAR_TAR = NIQAR\=TSAALI\=UR\=NIQAR\=TAR ;
LIST NIRU = NIRU ;
LIST NIRU_LAAR = NIRU\=LAAR ;
LIST NIRU_LAAR_RIAR = NIRU\=LAAR\=RIAR ;
LIST NIRU_LIR = NIRU\=LIR ;
LIST NIRU_LIR_GALUAR = NIRU\=LIR\=GALUAR ;
LIST NIRU_LIR_SIMA_GALUAR = NIRU\=LIR\=SIMA\=GALUAR ;
LIST NIRU_NNGIT = NIRU\=NNGIT ;
LIST NIRU_NNGIT_NIR = NIRU\=NNGIT\=NIR ;
LIST NIRU_QQAJAR_QE = NIRU\=QQAJAR\=QE ;
LIST NIRU_SIMA_SSA_GALUAR = IRU\=SIMA\=SSA\=GALUAR ;
LIST NIRU_SSA = NIRU\=SSA ;
LIST NIR = NIR ;
LIST NIRAR = NIRAR ;
LIST NGAAR = NGAAR ;
LIST NGAAR_GUMAAR = NGAAR\=GUMAAR ;
LIST NGAAR_LIR = NGAAR\=LIR ;
LIST NGAAR_LIR_TIP = NGAAR\=LIR\=TIP ;
LIST NGAAR_GALUAR = NGAAR\=GALUAR ;
LIST NGAAR_TAR = NGAAR\=TAR ;
LIST NGAAR_SSA = NGAAR\=SSA ;
LIST NGAAR_TSIAR_RIIR = NGAAR\=TSIAR\=RIIR ;
LIST NGAJAP = NGAJAP ;
LIST NNGIT = NNGIT ;
LIST NNGIT_GALLAR = NNGIT\=GALLAR ;
LIST NNGIT_GALLAR_TIP = NNGIT\=GALLAR\=TIP ;
LIST NNGIT_GALUAR = NNGIT\=GALUAR ;
LIST NNGIT_GALUAR_NIR = NNGIT\=GALUAR\=NIR ;
LIST NNGIT_LUINNAR = NNGIT\=LUINNAR ;
LIST NNGIT_LUINNAR_SSA = NNGIT\=LUINNAR\=SSA ;
LIST NNGIT_NIAR = NNGIT\=NIAR ;
LIST NNGIT_NIAR_SINNAA = NNGIT\=NIAR\=SINNAA ;
LIST NNGIT_NIAR_SINNAA_NIR = NNGIT\=NIAR\=SINNAA\=NIR ;
LIST NNGIT_NIAR_SINNAA_NNGIT = NNGIT\=NIAR\=SINNAA\=NNGIT ;
LIST NNGIT_NIAR_SSA = NNGIT\=NIAR\=SSA ;
LIST NNGIT_NIAR_TAR = NNGIT\=NIAR\=TAR ;
LIST NNGIT_NIAR_TAR_TIGE = NNGIT\=NIAR\=TAR\=TIGE ;
LIST NNGIT_NIAR_GUMAAR = NNGIT\=NIAR\=GUMAAR ;
LIST NNGIT_QE = NNGIT\=QE ;
LIST NNGIT_NIRAR = NNGIT\=NIRAR ;
LIST NNGIT_NIRU = NNGIT\=NIRU ;
LIST NNGIT_NIRU_NGAAR = NNGIT\=NIRU\=NGAAR  ;
LIST NNGIT_NIR =  NNGIT\=NIR ;
LIST NNGIT_RIIR = NNGIT\=RIIR ;
LIST NNGIT_TAR_INNAR = NNGIT\=TAR\=INNAR ;
LIST NNGIT_TAR_INNAR_SIMA = NNGIT\=TAR\=INNAR\=SIMA ;
LIST NNGIT_TAR_INNAR_SSA = NNGIT\=TAR\=INNAR\=SSA ;
LIST NNGIT_TUUR = NNGIT\=TUUR ;
LIST NNGIT_TUUR_TAR = NNGIT\=TUUR\=TAR ;
LIST NNGIT_TUUR_TAR_GALUAR = NNGIT\=TUUR\=TAR\=GALUAR ;
LIST NNGIT_TUUR_TAR_NIR = NNGIT\=TUUR\=TAR\=NIR ;
LIST NNGIT_TUUR_TIP = NNGIT\=TUUR\=TIP ;
LIST NNGIT_TUQ_USAAR = LIST NNGIT\=TUQ\=USAAR  ;
LIST NNGIT_VIP = NGIT\=VIP ;
LIST NNGUAQ = NNGUAQ ;
LIST NNGUR = NNGUR ;
LIST NNGUR_TIP_QQIP_SSA = NNGUR\=TIP\=QQIP\=SSA ;
LIST PAJAAR = PAJAAR ;
LIST PAJAAR_INNAR = PAJAAR\=INNAR ;
LIST PALAAQ = PALAAQ ;
LIST PALAAQ_NNGUAQ = PALAAQ\=NNGUAQ ;
LIST PALAAQ_SUAQ = PALAAQ\=SUAQ ;
LIST PALAAR = PALAAR ;
LIST PALLAP = PALLAP ;
LIST PALUP = PALUP ;
LIST PAK_SUAQ = PAK\=SUAQ ;
LIST QAR = QAR ;
LIST QAR_NNGIT = QAR\=NNGIT ;
LIST QATIGIIT = QATIGIIT ;
LIST QATIGIIP = QATIGIIP ;
LIST QATIGIIP_LIR = QATIGIIP\=LIR ;
LIST QATIGIIP_LUAR = QATIGIIP\=LUAR ;
LIST QATIGIIP_LUAR_SINNAA = QATIGIIP\=LUAR\=SINNAA ;
LIST QATIGIIP_LUAR_SINNAA_LIR = QATIGIIP\=LUAR\=SINNAA\=LIR ;
LIST QATIGIIP_NIAR = QATIGIIP\=NIAR ;
LIST QATIGIIP_TAR = QATIGIIP\=TAR ;
LIST QATIGIIP_TIP = QATIGIIP\=TIP  ;
LIST QATTAAR = QATTAAR ;
LIST QATTAAR_GALUAR = QATTAAR\=GALUAR ;
LIST QATTAAR_UTE = QATTAAR\=UTE ;
LIST QE = QE ;
LIST QINA = QINA ;
LIST QQAAR = QQAAR ;
LIST QQAAR_GALLAR = QQAAR\=GALLAR ;
LIST QQAAR_RIAR = QQAAR\=RIAR ;
LIST QQAAR_SIMA = QQAAR\=SIMA ;
LIST QQAAR_SIMA_NNGIT = QQAAR\=SIMA\=NNGIT ;
LIST QQAAR_SSA_NNGIT_NIR = QQAAR\=SSA\=NNGIT\=NIR ;
LIST QQAAR_TIP_NIQAR = QQAAR\=TIP\=NIQAR ;
LIST QQAJAR = QQAJAR ;
LIST QQIP = QQIP ;
LIST QQIP_LIR = QQIP\=LIR ;
LIST QQIP_LIR_GALUAR = QQIP\=LIR\=GALUAR ;
LIST QQIP_NIAR = QQIP\=NIAR ;
LIST QQIP_NIAR_TAR = QQIP\=NIAR\=TAR ;
LIST QQIP_NNGIT = QQIP\=NNGIT ;
LIST QQIP_NNGIT_LUINNAR = QQIP\=NNGIT\=LUINNAR ;
LIST QQIP_NNGIT_TAANNAR = QQIP\=NNGIT\=TAANNAR ;
LIST QQIP_NNGIT_TAANNAR_SSA = QQIP\=NNGIT\=TAANNAR\=SSA ;
LIST QQIP_SINNAA = QQIP\=SINNAA ;
LIST QQIP_SINNAA_SSA = QQIP\=SINNAA\=SSA ;
LIST QQIP_SSA = QQIP\=SSA ;
LIST QQIP_SSA_NNGIT = QQIP\=SSA\=NNGIT ;
LIST QQIP_TAR = QQIP\=TAR ;
LIST QQIP_TARIAQAR = QQIP\=TARIAQAR ;
LIST QQIP_TARIAQAR_NIR = QQIP\=TARIAQAR\=NIR ;
LIST QQIP_TSIAR = QQIP\=TSIAR ;
LIST QQISSAAR = QQISSAAR ;
LIST QQISSAAR_GUMA = QQISSAAR\=GUMA ;
LIST QQU = QQU ;
LIST QQU_GALUAR = QQU\=GALUAR ;
LIST QQU_GIARTUR = QQU\=GIARTUR ;
LIST QQU_GIARTUR_QQU = QQU\=GIARTUR\=QQU ;
LIST QQU_GUNNAIR = QQU\=GUNNAIR ;
LIST QQU_NNGIT = QQU\=NNGIT ;
LIST QQU_NNGIT_VIP = QQU\=NNGIT\=VIP ;
LIST QQU_NNGIT_LUINNAR = QQU\=NNGIT\=LUINNAR ;
LIST QQU_NIQAR = QQU\=NIQAR ;
LIST QQU_HTR = QQU\=HTR ;
LIST QQU_HTR_NNGIT = QQU\=HTR\=NNGIT ;
LIST QQU_HTR_TAR = QQU\=HTR\=TAR ;
LIST QQU_HTR_GUNNAIR = QQU\=HTR\=GUNNAIR ;
LIST QQU_SSA = QQU\=SSA ;
LIST QQU_TAR = QQU\=TAR ;
LIST RIAR = RIAR ;
LIST RIAR_GALUAR = RIAR\=GALUAR ;
LIST RIAR_INNAR = RIAR\=INNAR ;
LIST RIAR_SIMA = RIAR\=SIMA ;
LIST RIAR_SINNAA_GUNNAIR_QQA = RIAR\=SINNAA\=GUNNAIR\=QQA ;
LIST RIAR_USIQ = RIAR\=USIQ ;
LIST RIAAT = RIAAT ;
LIST RIIR = RIIR ;
LIST RIIR_SIMA = RIIR\=SIMA ;
LIST RIIR_SIMA_NIR = RIIR\=SIMA\=NIR ;
LIST RIIR_SIMA_SSA = RIIR\=SIMA\=SSA ;
LIST RIIR_SIMA_SSA_GALUAR = RIIR\=SIMA\=SSA\=GALUAR ;
LIST RIIR_TIP = RIIR\=TIP ;
LIST RIIR_SSA = RIIR\=SSA ;
LIST RUTTUR = RUTTUR ;
LIST SURE = SURE ;
LIST SURE_NIQAR = SURE\=NIQAR ;
LIST SURE_NNGIT = SURE\=NNGIT ;
LIST SURE_NNGIT_GALUAR = SURE\=NNGIT\=GALUAR ;
LIST RUJUK = RUJUK ;
LIST RUJUK_SUAQ = RUJUK\=SUAQ ;
LIST RUJUK_SUAR = RUJUK\=SUAR ;
LIST RUJUK_SUAR_NIAR = RUJUK\=SUAR\=NIAR ;
LIST RUJUK_SUAR_QINA = RUJUK\=SUAR\=QINA ;
LIST RUJUK_SUAR_TARIAQAR = RUJUK\=SUAR\=TARIAQAR ;
LIST SAR = SAR ;
LIST SAR_HTR = SAR\=HTR ;
LIST SARIASSA = SARIASSA ; #skal checkes
LIST SAR_NIQAR = SAR\=NIQAR ;
LIST SAR_NIQAR_SIMA = SAR\=NIQAR\=SIMA ;
LIST SAR_NIQAR_SIMA_NNGIT = SAR\=NIQAR\=SIMA\=NNGIT ;
LIST SAR_SIMA = SAR\=SIMA ;
LIST SAR_SIMA_GALUAR = SAR\=SIMA\=GALUAR ;
LIST SAR_SIMA_NNGIT = SAR\=SIMA\=NNGIT ;
LIST SAR_TAR = SAR\=TAR ;
LIST SAR_TARIAR = SAR\=TARIAR ; #skal checkes i corpus
LIST SAR_TARIAQAR = SAR\=TARIAQAR  ;
LIST SAR_TIP = SAR\=TIP ;
LIST SAR_TIP_SSA = SAR\=TIP\=SSA ;
LIST SAR_TIP_TAR = SAR\=TIP\=TAR ;
LIST SI = SI ;
LIST SINNAR = SINNAR ;
LIST SIMA = SIMA ;
LIST SIMA_INNAR = SIMA\=INNAR ;
LIST SIMA_GALUAR = SIMA\=GALUAR ;
LIST SIMA_GUNNAIR = SIMA\=GUNNAIR ;
LIST SIMA_GUNNAIR_QINA = SIMA\=GUNNAIR\=QINA ;
LIST SIMA_GUNNAIR_QQU = SIMA\=GUNNAIR\=QQU ;
LIST SIMA_LIR = SIMA\=LIR ;
LIST SIMA_LIR_NIAR_SSA = SIMA\=LIR\=NIAR\=SSA ;
LIST SIMA_NAR = SIMA\=NAR ;
LIST SIMA_NGAAR = SIMA\=NGAAR ;
LIST SIMA_NIQAR = SIMA\=NIQAR ;
LIST SIMA_QE = SIMA\=QE ;
LIST SIMA_NIR = SIMA\=NIR ;
LIST SIMA_NNGIT = SIMA\=NNGIT ;
LIST SIMA_NNGIT_GALUAR = SIMA\=NNGIT\=GALUAR ;
LIST SIMA_NNGIT_NIR = SIMA\=NNGIT\=NIR ;
LIST SIMA_NNGIT_TAANNAR = SIMA\=NNGIT\=TAANNAR ;
LIST SIMA_NNGIT_TAANNAR_SIMA = SIMA\=NNGIT\=TAANNAR\=SIMA ;
LIST SIMA_NNGIT_TIP = SIMA\=NNGIT\=TIP ;
LIST SIMA_NNGIT_TIP_HTR = SIMA\=NNGIT\=TIP\=HTR ;
LIST SIMA_QQIP_LIR = SIMA\=QQIP\=LIR ;
LIST SIMA_QQIP = SIMA\=QQIP ;
LIST SIMA_QQU = SIMA\=QQU ;
LIST SIMA_QQU_NNGIT = SIMA\=QQU\=NNGIT ;
LIST SIMA_TARIAQAR = SIMA\=TARIAQAR ;
LIST SIMA_RIIR = SIMA\=RIIR ;
LIST SIMA_TARIAQAR_GUNAR = SIMA\=TARIAQAR\=GUNAR ;
LIST SIMA_TARIAQAR_GUNAR_GALUAR = SIMA\=TARIAQAR\=GUNAR\=GALUAR ;
LIST SIMA_SINNAA_QQU = SIMA\=SINNAA\=QQU ;
LIST SIMA_SSA = SIMA\=SSA ;
LIST SIMA_SSA_GALUAR = SIMA\=SSA\=GALUAR ;
LIST SIMA_SSA_GUNAR = SIMA\=SSA\=GUNAR ;
LIST SIMA_SSA_NNGIT = SIMA\=SSA\=NNGIT ;
LIST SINNAA_NNGUR_GUMAAR = SINNAA\=NNGUR\=GUMAAR ;
LIST SIMA_SSA_NNGIT_GALUAR = SIMA\=SSA\=NNGIT\=GALUAR ;
LIST SIMA_TAR_SSA = SIMA\=TAR\=SSA ;
LIST SIMA_SINNAA = SIMA\=SINNAA ;
LIST SIMA_SINNAA_GALUAR = SIMA\=SINNAA\=GALUAR ;
LIST SIMA_TIP = SIMA\=TIP ;
LIST SIMA_TIP_HTR = SIMA\=TIP\=HTR ;
LIST SIMA_TIP_HTR_QQU = SIMA\=TIP\=HTR\=QQU ;
LIST SIMA_VALLAAR = SIMA\=VALLAAR ;
LIST SIMAAR = SIMAAR  ;
LIST SINNAA = SINNAA ;
LIST SINNAA_GALUAR = SINNAA\=GALUAR ;
LIST SINNAA_GUMA = SINNAA\=GUMA ;
LIST SINNAA_GUMAAR = SINNAA\=GUMAAR ;
LIST SINNAA_GUNNAIR = SINNAA\=GUNNAIR ;
LIST SINNAA_GUNNAIR_QQA = SINNAA\=GUNNAIR\=QQA ;
LIST SINNAA_GUNNAIR_TIP = SINNAA\=GUNNAIR\=TIP ;
LIST SINNAA_LIR = SINNAA\=LIR ;
LIST SINNAA_LIR_NAVIAR_NNGIT = SINNAA\=LIR\=NAVIAR\=NNGIT ;
LIST SINNAA_LIR_QQU = SINNAA\=LIR\=QQU ;
LIST SINNAA_LIR_SIMA = SINNAA\=LIR\=SIMA ;
LIST SINNAA_LIR_TIP = SINNAA\=LIR\=TIP ;
LIST SINNAA_LUAR = SINNAA\=LUAR ;
LIST SINNAA_NAVIAR_NNGIT = SINNAA\=NAVIAR\=NNGIT ;
LIST SINNAA_NIAR_SSA = SINNAA\=NIAR\=SSA ;
LIST SINNAA_NIR = SINNAA\=NIR ;
LIST SINNAA_NNGIT = SINNAA\=NNGIT ;
LIST SINNAA_NNGIT_GALUAR = SINNAA\=NNGIT\=GALUAR ;
LIST SINNAA_NNGIT_LUINNAR = SINNAA\=NNGIT\=LUINNAR ;
LIST SINNAA_NNGIT_NIR = SINNAA\=NNGIT\=NIR ;
LIST SINNAA_NNGIT_NIRAR = SINNAA\=NNGIT\=NIRAR ;
LIST SINNAA_QQU = SINNAA\=QQU ;
LIST SINNAA_SAR = SINNAA\=SAR ;
LIST SINNAA_SIMA = SINNAA\=SIMA ;
LIST SINNAA_SIMA_NIR = SINNAA\=SIMA\=NIR ;
LIST SINNAA_SIMA_NNGIT_NIR = SINNAA\=SIMA\=NNGIT\=NIR ;
LIST SINNAA_SIMA_NNGIT = SINNAA\=SIMA\=NNGIT ;
LIST SINNAA_SSA = SINNAA\=SSA ;
LIST SINNAA_SSA_GALUAR = SINNAA\=SSA\=GALUAR ;
LIST SINNAA_SSA_NNGIT = SINNAA\=SSA\=NNGIT ;
LIST SINNAA_TUAR = SINNAA\=TUAR ;
LIST SINNAA_TIP = SINNAA\=TIP ;
LIST SIUR = SIUR ;
LIST SUR = SUR ;
LIST SUR_UTE = SUR\=UTE ;
LIST SUR_UTE_LIR = SUR\=UTE\=LIR ;
LIST SSA = SSA ;
LIST SSA_GALUAR = SSA\=GALUAR ;
LIST SSA_NIR = SSA\=NIR ;
LIST SSA_NNGIT = SSA\=NNGIT ;
LIST SSA_NNGIT_GALUAR = SSA\=NNGIT\=GALUAR ;
LIST SSA_NNGIT_LUINNAR = SSA\=NNGIT\=LUINNAR ;
LIST SSA_NNGIT_NIR = SSA\=NNGIT\=NIR ;
LIST SSA_QE = SSA\=QE ;
LIST SSA_SIMA = SSA\=SIMA ;
LIST SSAQ = SSAQ ;
LIST SSAQ_SIAQ = SSAQ\=SIAQ ;
LIST SSAQ_SIAQ_SSAQ = SSAQ\=SIAQ\=SSAQ  ;
LIST SSIP = SSIP ;
LIST SUAQ = SUAQ ;
LIST SSUSIQ = SSUSIQ ;
LIST TAAR = TAAR ;
LIST TAR = TAR ;
LIST TAR_GALUAR = TAR\=GALUAR ;
LIST TAR_GUMAAR = TAR\=GUMAAR ;
LIST TAR_LIR = TAR\=LIR ;
LIST TAR_LIR_GUMAAR = TAR\=LIR\=GUMAAR ;
LIST TAR_LIR_SSA = TAR\=LIR\=SSA ;
LIST TAR_LIR_SSA_NNGIT = TAR\=LIR\=SSA\=NNGIT ;
LIST TAR_LIR_TIP = TAR\=LIR\=TIP ;
LIST TAR_NIQAR = TAR\=NIQAR ;
LIST TAR_NIQAR_SSA = TAR\=NIQAR\=SSA ;
LIST TAR_NIAR = TAR\=NIAR ;
LIST TAR_NIR = TAR\=NIR ;
LIST TAR_NNGIT = TAR\=NNGIT ;
LIST TAR_QE = TAR\=QE ;
LIST TAR_SIMA = TAR\=SIMA ;
LIST TAR_SIMA_GALUAR = TAR\=SIMA\=GALUAR ;
LIST TAR_SIMA_NNGIT = TAR\=SIMA\=NNGIT ;
LIST TAR_SIMA_NNGIT_NIR = TAR\=SIMA\=NNGIT\=NIR ;
LIST TAR_SIMA_SSA_GUNAR = TAR\=SIMA\=SSA\=GUNAR ;
LIST TAR_SINNAA = TAR\=SINNAA ;
LIST TAR_SINNAA_GALUAR = TAR\=SINNAA\=GALUAR ;
LIST TAR_SINNAA_GUNAR = TAR\=SINNAA\=GUNAR ;
LIST TAR_SINNAA_GUNAR_GALUAR = TAR\=SINNAA\=GUNAR\=GALUAR ;
LIST TAR_SINNAA_NNGIT = TAR\=SINNAA\=NNGIT ;
LIST TAR_SINNAA_QQU = TAR\=SINNAA\=QQU ;
LIST TAR_SINNAA_SIMA = TAR\=SINNAA\=SIMA ;
LIST TAR_SINNAA_SIMA_GALUAR = TAR\=SINNAA\=SIMA\=GALUAR ;
LIST TAR_SINNAA_SIMA_NNGIT = TAR\=SINNAA\=SIMA\=NNGIT ;
LIST TAR_SSA = TAR\=SSA ;
LIST TAR_SSA_NNGIT = TAR\=SSA\=NNGIT ;
LIST TAR_TAR = TAR\=TAR ;
LIST TARE = TARE ;
LIST TAQ = TAQ ;
LIST TAQ_LIK = TAQ\=LIK ;
LIST TARIAQAR = TARIAQAR ;
LIST TARIAQAR_LIR = TARIAQAR\=LIR ;
LIST TARIAQAR_LIR_SIMA = TARIAQAR\=LIR\=SIMA ;
LIST TARIAQAR_LIR_SINNAA = TARIAQAR\=LIR\=SINNAA ;
LIST TARIAQAR_NNGIT = TARIAQAR\=NNGIT ;
LIST TARIAQAR_NNGIT_NIR = TARIAQAR\=NNGIT\=NIR ;
LIST TARIAQAR_SIMA = TARIAQAR\=SIMA ;
LIST TARIAQAR_SSA = TARIAQAR\=SSA ;
LIST TARIAQAR_SSA_GALUAR = TARIAQAR\=SSA\=GALUAR ;
LIST TARIAQAR_SSA_NIR = TARIAQAR\=SSA\=NIR ;
LIST TARIAQAR_SSA_NNGIT = TARIAQAR\=SSA\=NNGIT ;
LIST TARIAQAR_TAR = TARIAQAR\=TAR ;
LIST TIGE = TIGE ;
LIST TIGE_TAR = TIGE\=TAR ;
LIST TIP = TIP ;
LIST TIP_GALUAR = TIP\=GALUAR ;
LIST TIP_GIARTUR = TIP\=GIARTUR ;
LIST TIP_GIARTUR_SSA = TIP\=GIARTUR\=SSA ;
LIST TIP_GIARTUR_SSA_NNGIT = TIP\=GIARTUR\=SSA\=NNGIT ;
LIST TIP_GIARTUR_SSA_NNGIT_NIR = TIP\=GIARTUR\=SSA\=NNGIT\=NIR ;
LIST TIP_GUMA = TIP\=GUMA ;
LIST TIP_GUMA_LLAARE = TIP\=GUMA\=LLAARE ;
LIST TIP_GUMA_NNGIT = TIP\=GUMA\=NNGIT ;
LIST TIP_GUMA_NNGIT_NIR = TIP\=GUMA\=NNGIT\=NIR ;
LIST TIP_GUMAAR = TIP\=GUMAAR ;
LIST TIP_HTR = TIP\=HTR ;
LIST TIP_HTR_GIARTUR = TIP\=HTR\=GIARTUR ;
LIST TIP_HTR_GUMA = TIP\=HTR\=GUMA ;
LIST TIP_HTR_NIAR = TIP\=HTR\=NIAR ;
LIST TIP_HTR_QE = TIP\=HTR\=QE ;
LIST TIP_HTR_QQU = TIP\=HTR\=QQU ;
LIST TIP_HTR_GUSUP = TIP\=HTR\=GUSUP ;
LIST TIP_HTR_SINNAA = TIP\=HTR\=SINNAA ;
LIST TIP_HTR_SINNAA_TAR = TIP\=HTR\=SINNAA\=TAR ;
LIST TIP_HTR_TAR = TIP\=HTR\=TAR ;
LIST TIP_LAAR = TIP\=LAAR ;
LIST TIP_LAAR_INNAR = TIP\=LAAR\=INNAR ;
LIST TIP_LAAR_INNAR_GUMA = TIP\=LAAR\=INNAR\=GUMA ;
LIST TIP_LIR = TIP\=LIR ;
LIST TIP_LUAR = TIP\=LUAR ;
LIST TIP_LUAR_SINNAA = TIP\=LUAR\=SINNAA ;
LIST TIP_LUAR_SINNAA_LIR = TIP\=LUAR\=SINNAA\=LIR ;
LIST TIP_LUINNAR = TIP\=LUINNAR ;
LIST TIP_LUINNAR_SSA = TIP\=LUINNAR\=SSA  ;
LIST TIP_NGAJAP_LIR = TIP\=NGAJAP\=LIR ;
LIST TIP_NIAR = TIP\=NIAR ;
LIST TIP_NIAR_GUMA = TIP\=NIAR\=GUMA ;
LIST TIP_NIAR_QQU = TIP\=NIAR\=QQU ;
LIST TIP_NIQAR = TIP\=NIQAR ;
LIST TIP_NIQAR_GALUAR = TIP\=NIQAR\=GALUAR ;
LIST TIP_NIQAR_LUAR = TIP\=NIQAR\=LUAR ;
LIST TIP_NIQAR_NNGIT = TIP\=NIQAR\=NNGIT ;
LIST TIP_NIQAR_RIIR = TIP\=NIQAR\=RIIR ;
LIST TIP_NIQAR_SIMA = TIP\=NIQAR\=SIMA ;
LIST TIP_NIQAR_SIR = TIP\=NIQAR\=SIR ;
LIST TIP_NIQAR_SSA = TIP\=NIQAR\=SSA ;
LIST TIP_NIQAR_TARIAQAR = TIP\=NIQAR\=TARIAQAR ;
LIST TIP_NIQAR_TARIAQAR_GALUAR = TIP\=NIQAR\=TARIAQAR\=GALUAR ;
LIST TIP_NNGIT = TIP\=NNGIT ;
LIST TIP_NNGIT_TUUR = TIP\=NNGIT\=TUUR ;
LIST TIP_QQAAR = TIP\=QQAAR ;
LIST TIP_QQAAR_NIAR = TIP\=QQAAR\=NIAR ;
LIST TIP_QQAMMIR = TIP\=QQAMMIR ;
LIST TIP_QQU = TIP\=QQU ;
LIST TIP_RIAR = TIP\=RIAR ;
LIST TIP_RIIR = TIP\=RIIR ;
LIST TIP_SIMA = TIP\=SIMA ;
LIST TIP_SIMA_LIR = TIP\=SIMA\=LIR ;
LIST TIP_SINNAA = TIP\=SINNAA ;
LIST TIP_SINNAA_GUMA = TIP\=SINNAA\=GUMA ;
LIST TIP_SINNAA_LIR = TIP\=SINNAA\=LIR ;
LIST TIP_SINNAA_LIR_SSA = TIP\=SINNAA\=LIR\=SSA ;
LIST TIP_SINNAA_NNGIT = TIP\=SINNAA\=NNGIT ;
LIST TIP_SINNAA_NNGUR_SSA = TIP\=SINNAA\=NNGUR\=SSA ;
LIST TIP_SSA = TIP\=SSA ;
LIST TIP_SSA_NNGIT = TIP\=SSA\=NNGIT ;
LIST TIP_SSA_NNGIT_NIR = TIP\=SSA\=NNGIT\=NIR ;
LIST TIP_TAR = TIP\=TAR ;
LIST TIP_TAR_LIR = TIP\=TAR\=LIR ;
LIST TIP_TAR_SSA = TIP\=TAR\=SSA ;
LIST TIP_UTIGE = TIP\=UTIGE ;
LIST TITIR = TITIR ;
LIST TITIR_HTR = TITIR\=HTR ;
LIST TSAALI = TSAALI ;
LIST TSAALI_UR = TSAALI\=UR ;
LIST TSIAR = TSIAR ;
LIST TSIAR_SINNAA = TSIAR\=SINNAA ;
LIST TUAR = TUAR ;
LIST TUAR_GALUAR = TUAR\=GALUAR ;
LIST TUAR_SIMA = TUAR\=SIMA ;
LIST TUAR_TAR = TUAR\=TAR ;
LIST TUAR_TAR_NNGIT = TUAR\=TAR\=NNGIT ;
LIST TUAR_INNAR = TUAR\=INNAR ;
LIST TUAR_INNAR_TAR = TUAR\=INNAR\=TAR ;
LIST TUAR_INNAR_GUMAAR = TUAR\=INNAR\=GUMAAR ;
LIST TUAR_SSA = TUAR\=SSA ;
LIST TUAR_SSA_NNGIT = TUAR\=SSA\=NNGIT ;
LIST TUINNAR = TUINNAR ;
LIST TUQ = TUQ ;
LIST TUQATIGIIKKUUTAAR = TUQATIGIIKKUUTAAR ; #skal checkes i corpus
LIST TUQAQ = TUQAQ ;
LIST TUQAQ_SUAQ = TUQAQ\=SUAQ ;
LIST TUUR = TUUR ;
LIST TUUR_QINA = TUUR\=QINA ;
LIST U = U ;
LIST U_NIRAR = U\=NIRAR ;
LIST UTIGE = UTIGE ;
LIST USAAR = USAAR ;
LIST UTE = UTE ;
LIST VALLAAR = VALLAAR ;
LIST VALLAAR_LIR = VALLAAR\=LIR ;
LIST VALLAAR_LIR_SIMA = VALLAAR\=LIR\=SIMA ;
LIST VALLAAR_QE = VALLAAR\=QE ;
LIST VIK = VIK ;
LIST VIP = VIP ;
LIST VIP_SIMA = VIP\=SIMA ;
LIST VIP_SINNAA = VIP\=SINNAA ;
LIST VIP_SINNAA_NNGIT = VIP\=SINNAA\=NNGIT ;

# Tilhængspartikler

LIST AASIIT = AASIIT ;
LIST AASIINNGOOQ = AASIINNGOOQ ;

LIST GOOQ = GOOQ ;
LIST GOORUNA = GOORUNA ;

LIST LI = LI ;
LIST LISSAAQ = LISSAAQ ;
LIST LIGOOQ = LIGOOQ ;
LIST LIAASIIT = LIAASIIT ;
LIST LIUNA = LIUNA ;

LIST LU = LU "aamma" ;
LIST LUGOOQ = LUGOOQ ;
LIST LUMI = LUMI ;
LIST LUMIAASIIT = LUMIAASIIT ;

LIST LUUNNIILLI = LUUNNIILLI ;
LIST LUUNNIIT = LUUNNIIT ;
LIST LUUNNIIMMI = LUUNNIIMMI ;
LIST LUUNNIILLU = LUUNNIILLU ;

LIST MI = MI ;
LIST MIAASIINNGOOQ = MIAASIINNGOOQ ;
LIST MIAASIIT = MIAASIIT ;
LIST MIGOOQ = MIGOOQ ;
LIST MITAAVA = MITAAVA ;
LIST MITAAVAMI = MITAAVAMI ;
LIST MITAAVAAKU = MITAAVAAKU ;
LIST MITAAVAANA = MITAAVAANA ;

LIST TTAAQ = TTAAQ ;
LIST TTAARLU = TTAARLU ;
LIST TTAARMI = TTAARMI ;

LIST UNA = UNA ;
LIST UKU = UKU ;

# Sets

# Alle ordklasser
# ---------------
LIST WORD = N V Adj Pron Adv Interj Part Num ;

SET NOT-PROP = WORD - Prop ;

SET NOT-Abbr = WORD - Abbr ;

SET AFFINGERET = ALLAP | ALLAP_TIP | ALLAP_TIP_HTR | ARAQ | IAR | IAR_HTR | IP | IP_QAT_GE | INNAQ | INNAR | INNAR_LIR | INNAR_NIAR | INNAR_QE | INNAR_SIMA | INNAR_SINNAA | INNAR_SSA | INNAR_TAR | INNAR_TARIAQAR | IRUP | GALLAR | GALLAR_TIP | GALUAR | GALUAR_NIAR | GASUAR | GE | GE_HTR | GIARTUR | GIARTUR_AAR_NIQAR | GIARTUR_GALLAR_SSA | GIARTUR_GASUAR | GIARTUR_GASUAR_NIAR | GIARTUR_GUMA | GIARTUR_INNAR | GIARTUR_INNAR_LIR | GIARTUR_INNAR_LIR_GALUAR | GIARTUR_INNAR_LIR_GALUAR_SIMA | GIARTUR_INNAR_LIR_SIMA | GIARTUR_INNAR_SIMA | GIARTUR_LIR | GIARTUR_LIR_QINA | GIARTUR_NIAR | GIARTUR_PILUUR | GIARTUR_QATIGIIP | GIARTUR_QATIGIIP_INNAR | GIARTUR_QINA | GIARTUR_QQAAR | GIARTUR_QQAAR_GALLAR | GIARTUR_QQAAR_GUMA | GIARTUR_QQAAR_GUMA_GALUAR | GIARTUR_QQU | GIARTUR_SIMA | GIARTUR_SSA | GIARTUR_SSA_NIR | GIARTUR_SSA_NNGIT | GIARTUR_SSA_NNGIT_NIR | GIARTUR_TAR | GIARTUR_TIP | GIARTUR_TIP_GUMA | GUMA | GUMA_GUNNAIR | GUMA_GUNNAIR_TIP | GUMA_LIR | GUMA_LLAARE | GUMA_GALUAR | GUMA_NNGIT | GUMA_NNGIT_GALUAR | GUMA_NNGIT_TAR_INNAR | GUMA_NNGIT_TAR_INNAR_SSA | GUMA_SAR | GUMA_SSA | GUMA_SSA_NNGIT | GUMA_SSA_NNGIT_NIR | GUMA_SSA_NIR | GUMA_TU | GUMA_TU_VALLAAR | GUMAAR | GUMAAR_NIR | GUNAR | GUNNAIR | GUNNAIR_RIIR | GUNNAIR_LIR_SIMA | GUNNAIR_RIIR | GUNNAIR_INNAR | GUNNAIR_TIP_GUMA | GUNNAIR_SIMA | GUNNAIR_SIMA_NNGIT | GUNNAIR_SIMA_SSA | GUNNAIR_SIMA_SSA_GALUAR | GUNNAIR_TIP_SINNAA | GUNNAIR_SSA | GUNNAIR_TIP | GUNNAIR_TIP_NIAR | GUNNAIR_TIP_SSA | GUNNAIR_VIP_SSA | GUSUP | GUSUP_GALUAR | GUSUP_NNGIT | GUSUP_SINNAA | HTR | IR | JA | KAR | KAAP | KKUT | LAAR | LAAR_GALLAR | LAAR_GALLAR_NIAR | LAAR_RIIR | LAAR_RIIR_SIMA | LAAR_RIAR | LAAR_SIMA | LIK | LIK_TAQ | LIR | LIR_GALUAR | LIR_GUMA | LIR_GUMAAR | LIR_HTR | LIR_QE | LIR_RIIR | LIR_RIIR_SIMA | LIR_RUTTUR | LIR_SIMA | LIR_SINNAA | LIR_SINNAA_QQU | LIR_TAR | LIR_TARE | LIR_TIP | LIR_TIP_GUMAAR | LIR_TIP_NIAR | LIR_TIP_NIQAR | LIR_TIP_HTR | LIR_VIP | LIR_VIP_TARIAQAR | LIRSUR | LIRSUR_HTR | LISAR | LIRTUR | LIUR | LIUR_UTE | LUAR | LUAR_LIR | LUAR_LIR_RIIR_QQU_GALUAR | LUAR_RIAR | LUAR_NIAR | LUAR_SINNAA | LUAR_SINNAA_LIR | LUAR_SINNAA_LIR_SIMA | LUAR_SINNAA_NIQAR | LUAR_SINNAA_NIQAR_PASIP | LUINNAQ | LUINNAR | LUINNAR_LIR | LUINNAR_GUMA | LUINNAR_GUNAR | LUINNAR_SIMA | LUINNAR_SIMA_GALUAR | LUINNAR_SIMA_GUNAR | LUINNAR_SIMA_SSA | LUINNAR_GUMAAR | MIOQ | MIU | NAR | NAR_VALLAAR | NAR_VALLAAR_SSA | NAR_VALLAAR_SSA_NNGIT | NAVIAR | NAVIAR_NNGIT | NIAR | NIAR_GAJUP | NIAR_GALLAR | NIAR_GALUAR | NIAR_GALUAR_GUMAAR | NIAR_INNAR | NIAR_INNAR | NIAR_INNAR_LIR | NIAR_LIR | NIAR_LIR_QE | NIAR_LUAR | NIAR_NAR | NIAR_NIAR | NIAR_NIQAR | NIAR_NIQAR_QQAAR | NIAR_NIQAR_QQAAR_TAR | NIAR_NIQAR_RIIR | NIAR_NIQAR_SSA | NIAR_NIQAR_VALLAAR | NIAR_NIQAR_VALLAAR_QQU | NIAR_NNGIT | NIAR_NNGIT_QE | NIAR_QE | NIAR_QQAAR | NIAR_QQAAR_SSA | NIAR_QQU | NIAR_QQU_HTR | NIAR_RIAR | NIAR_SAR | NIAR_SIMA | NIAR_SIMA_GALUAR | NIAR_SIMA_NIR | NIAR_SIMA_NNGIT | NIAR_SIMA_NNGIT_NIR | NIAR_SSA | NIAR_SSA_NIR | NIAR_SSA_NNGIT | NIAR_SSA_NNGIT_NIR | NIAR_TAR | NIAR_TAR_GALUAR | NIAR_TAR_INNAR | NIAR_TAR_SIMA | NIAR_TAR_SIMA_GALUAR | NIAR_TARIAQAR | NIAR_TIP | NIAR_TIP_HTR | NIAR_VALLAAR | NIAR_VALLAAR_NIAR | NIP | NIQ | NIRSAQ | NIRPAAQ | NIRLUP | NIRLUP_NIR | NIRLUP_RIATAAR | NIRLUP_RIATAAR_SINNAA | NIQAR | NIQAR_GALUAR | NIQAR_GALUTTUINNAR | NIQAR_GUMA | NIQAR_GUMAAR | NIQAR_GUNNAIR | NIQAR_JA | NIQAR_LIR | NIQAR_LIR_RUTTUR | NIQAR_LUAR | NIQAR_LUAR_SINNAA | NIQAR_LUINNAR | NIQAR_LUINNAR_SINNAA | NIQAR_NNGIT | NIQAR_NNGIT_GALUAR | NIQAR_NNGIT_TAR_INNAR | NIQAR_NNGIT_TAR_INNAR_SIMA | NIQAR_QQAAR | NIQAR_QQAAR_TARIAQAR | NIQAR_QQAJAR | NIQAR_QQU | NIQAR_RIIR | NIQAR_SIMA | NIQAR_SIMA_TARIAQAR_GUNAR | NIQAR_SIMA_TARIAQAR_GUNAR_GALUAR | NIQAR_SIMA_TIGE | NIQAR_SINNAA | NIQAR_SINNAA_LIR | NIQAR_SINNAA_LIR_RIIR | NIQAR_SINNAA_SSA | NIQAR_SINNAA_SSA_GALUAR | NIQAR_SINNAA_NNGIT | NIQAR_SSA | NIQAR_SSA_NNGIT | NIQAR_SSA_TIP | NIQAR_TAR | NIQAR_TAR_QQU | NIQAR_TAR_NNGIT | NIQAR_TAR_NNGIT_NIR | NIQAR_TAR_GALUAR | NIQAR_TAR_SIMA | NIQAR_TAR_SSA | NIQAR_TIGE_SIMA_NIR | NIQAR_TIP | NIQAR_TSAALI | NIQAR_TSAALI_UR | NIQAR_TSAALI_UR_NIQAR | NIQAR_TSAALI_UR_NIQAR_TAR | NIRU | NIRU_LAAR | NIRU_LAAR_RIAR | NIRU_LIR | NIRU_LIR_GALUAR | NIRU_LIR_SIMA_GALUAR | NIRU_NNGIT | NIRU_NNGIT_NIR | NIRU_QQAJAR_QE | NIRU_SIMA_SSA_GALUAR | NIRU_SSA | NIR | NIRAR | NGAAR | NGAAR_GUMAAR | NGAAR_LIR | NGAAR_LIR_TIP | NGAAR_GALUAR | NGAAR_TAR | NGAAR_SSA | NGAAR_TSIAR_RIIR | NGAJAP | NNGIT | NNGIT_GALLAR | NNGIT_GALLAR_TIP | NNGIT_GALUAR | NNGIT_GALUAR_NIR | NNGIT_LUINNAR | NNGIT_LUINNAR_SSA | NNGIT_NIAR | NNGIT_NIAR_SINNAA | NNGIT_NIAR_SINNAA_NIR | NNGIT_NIAR_SINNAA_NNGIT | NNGIT_NIAR_SSA | NNGIT_NIAR_TAR | NNGIT_NIAR_TAR_TIGE | NNGIT_NIAR_GUMAAR | NNGIT_QE | NNGIT_NIRAR | NNGIT_NIRU | NNGIT_NIRU_NGAAR | NNGIT_NIR | NNGIT_RIIR | NNGIT_TAR_INNAR | NNGIT_TAR_INNAR_SIMA | NNGIT_TAR_INNAR_SSA | NNGIT_TUUR | NNGIT_TUUR_TAR | NNGIT_TUUR_TAR_GALUAR | NNGIT_TUUR_TAR_NIR | NNGIT_TUUR_TIP | NNGIT_TUQ_USAAR | NNGIT_VIP | NNGUAQ | NNGUR | NNGUR_TIP_QQIP_SSA | PAJAAR | PAJAAR_INNAR | PALAAQ | PALAAQ_NNGUAQ | PALAAQ_SUAQ | PALAAR | PALLAP | PALUP | PAK_SUAQ | QAR | QAR_NNGIT | QATIGIIT | QATIGIIP | QATIGIIP_LIR | QATIGIIP_LUAR | QATIGIIP_LUAR_SINNAA | QATIGIIP_LUAR_SINNAA_LIR | QATIGIIP_NIAR | QATIGIIP_TAR | QATIGIIP_TIP | QATTAAR | QATTAAR_GALUAR | QATTAAR_UTE | QE | QINA | QQAAR | QQAAR_GALLAR | QQAAR_RIAR | QQAAR_SIMA | QQAAR_SIMA_NNGIT | QQAAR_SSA_NNGIT_NIR | QQAAR_TIP_NIQAR | QQAJAR | QQIP | QQIP_LIR | QQIP_LIR_GALUAR | QQIP_NIAR | QQIP_NIAR_TAR | QQIP_NNGIT | QQIP_NNGIT_LUINNAR | QQIP_NNGIT_TAANNAR | QQIP_NNGIT_TAANNAR_SSA | QQIP_SINNAA | QQIP_SINNAA_SSA | QQIP_SSA | QQIP_SSA_NNGIT | QQIP_TAR | QQIP_TARIAQAR | QQIP_TARIAQAR_NIR | QQIP_TSIAR | QQISSAAR | QQISSAAR_GUMA | QQU | QQU_GALUAR | QQU_GIARTUR | QQU_GIARTUR_QQU | QQU_GUNNAIR | QQU_NNGIT | QQU_NNGIT_VIP | QQU_NNGIT_LUINNAR | QQU_NIQAR | QQU_HTR | QQU_HTR_NNGIT | QQU_HTR_TAR | QQU_HTR_GUNNAIR | QQU_SSA | QQU_TAR | RIAR | RIAR_GALUAR | RIAR_INNAR | RIAR_SIMA | RIAR_SINNAA_GUNNAIR_QQA | RIAR_USIQ | RIAAT | RIIR | RIIR_SIMA | RIIR_SIMA_NIR | RIIR_SIMA_SSA | RIIR_SIMA_SSA_GALUAR | RIIR_TIP | RIIR_SSA | SUR | SURE | SURE_NIQAR | SURE_NNGIT | SURE_NNGIT_GALUAR | RUJUK | RUJUK_SUAQ | RUJUK_SUAR | RUJUK_SUAR_NIAR | RUJUK_SUAR_QINA | RUJUK_SUAR_TARIAQAR | RUTTUR | SAR | SAR_HTR | SARIASSA | SAR_NIQAR | SAR_NIQAR_SIMA | SAR_NIQAR_SIMA_NNGIT | SAR_SIMA | SAR_SIMA_GALUAR | SAR_SIMA_NNGIT | SAR_TAR | SAR_TARIAR | SAR_TARIAQAR | SAR_TIP | SAR_TIP_SSA | SAR_TIP_TAR | SI | SINNAR | SIMA | SIMA_INNAR | SIMA_GALUAR | SIMA_GUNNAIR | SIMA_GUNNAIR_QINA | SIMA_GUNNAIR_QQU | SIMA_LIR | SIMA_LIR_NIAR_SSA | SIMA_NAR | SIMA_NGAAR | SIMA_NIQAR | SIMA_QE | SIMA_NIR | SIMA_NNGIT | SIMA_NNGIT_GALUAR | SIMA_NNGIT_NIR | SIMA_NNGIT_TAANNAR | SIMA_NNGIT_TAANNAR_SIMA | SIMA_NNGIT_TIP | SIMA_NNGIT_TIP_HTR | SIMA_QQIP_LIR | SIMA_QQIP | SIMA_QQU | SIMA_QQU_NNGIT | SIMA_TARIAQAR | SIMA_RIIR | SIMA_TARIAQAR_GUNAR | SIMA_TARIAQAR_GUNAR_GALUAR | SIMA_SINNAA_QQU | SIMA_SSA | SIMA_SSA_GALUAR | SIMA_SSA_GUNAR | SIMA_SSA_NNGIT | SINNAA_NNGUR_GUMAAR | SIMA_SSA_NNGIT_GALUAR | SIMA_TAR_SSA | SIMA_SINNAA | SIMA_SINNAA_GALUAR | SIMA_TIP | SIMA_TIP_HTR | SIMA_TIP_HTR_QQU | SIMA_VALLAAR | SIMAAR | SINNAA | SINNAA_GALUAR | SINNAA_GUMA | SINNAA_GUMAAR | SINNAA_GUNNAIR | SINNAA_GUNNAIR_QQA | SINNAA_GUNNAIR_TIP | SINNAA_LIR | SINNAA_LIR_NAVIAR_NNGIT | SINNAA_LIR_QQU | SINNAA_LIR_SIMA | SINNAA_LIR_TIP | SINNAA_LUAR | SINNAA_NAVIAR_NNGIT | SINNAA_NIAR_SSA | SINNAA_NIR | SINNAA_NNGIT | SINNAA_NNGIT_GALUAR | SINNAA_NNGIT_LUINNAR | SINNAA_NNGIT_NIR | SINNAA_NNGIT_NIRAR | SINNAA_QQU | SINNAA_SAR | SINNAA_SIMA | SINNAA_SIMA_NIR | SINNAA_SIMA_NNGIT_NIR | SINNAA_SIMA_NNGIT | SINNAA_SSA | SINNAA_SSA_GALUAR | SINNAA_SSA_NNGIT | SINNAA_TUAR | SINNAA_TIP | SIUR | SUR | SUR_UTE | SUR_UTE_LIR | SSA | SSA_GALUAR | SSA_NIR | SSA_NNGIT | SSA_NNGIT_GALUAR | SSA_NNGIT_LUINNAR | SSA_NNGIT_NIR | SSA_QE | SSA_SIMA | SSAQ | SSAQ_SIAQ | SSAQ_SIAQ_SSAQ | SSIP | SUAQ | SSUSIQ | TAAR | TAR | TAR_GALUAR | TAR_GUMAAR | TAR_LIR | TAR_LIR_GUMAAR | TAR_LIR_SSA | TAR_LIR_SSA_NNGIT | TAR_LIR_TIP | TAR_NIQAR | TAR_NIQAR_SSA | TAR_NIAR | TAR_NIR | TAR_NNGIT | TAR_QE | TAR_SIMA | TAR_SIMA_GALUAR | TAR_SIMA_NNGIT | TAR_SIMA_NNGIT_NIR | TAR_SIMA_SSA_GUNAR | TAR_SINNAA | TAR_SINNAA_GALUAR | TAR_SINNAA_GUNAR | TAR_SINNAA_GUNAR_GALUAR | TAR_SINNAA_NNGIT | TAR_SINNAA_QQU | TAR_SINNAA_SIMA | TAR_SINNAA_SIMA_GALUAR | TAR_SINNAA_SIMA_NNGIT | TAR_SSA | TAR_SSA_NNGIT | TAR_TAR | TARE | TAQ | TAQ_LIK | TARIAQAR | TARIAQAR_LIR | TARIAQAR_LIR_SIMA | TARIAQAR_LIR_SINNAA | TARIAQAR_NNGIT | TARIAQAR_NNGIT_NIR | TARIAQAR_SIMA | TARIAQAR_SSA | TARIAQAR_SSA_GALUAR | TARIAQAR_SSA_NIR | TARIAQAR_SSA_NNGIT | TARIAQAR_TAR | TIGE | TIGE_TAR | TIP | TIP_GALUAR | TIP_GIARTUR | TIP_GIARTUR_SSA | TIP_GIARTUR_SSA_NNGIT | TIP_GIARTUR_SSA_NNGIT_NIR | TIP_GUMA | TIP_GUMA_LLAARE | TIP_GUMA_NNGIT | TIP_GUMA_NNGIT_NIR | TIP_GUMAAR | TIP_HTR | TIP_HTR_GIARTUR | TIP_HTR_GUMA | TIP_HTR_NIAR | TIP_HTR_QE | TIP_HTR_QQU | TIP_HTR_GUSUP | TIP_HTR_SINNAA | TIP_HTR_SINNAA_TAR | TIP_HTR_TAR | TIP_LAAR | TIP_LAAR_INNAR | TIP_LAAR_INNAR_GUMA | TIP_LIR | TIP_LUAR | TIP_LUAR_SINNAA | TIP_LUAR_SINNAA_LIR | TIP_LUINNAR | TIP_LUINNAR_SSA | TIP_NGAJAP_LIR | TIP_NIAR | TIP_NIAR_GUMA | TIP_NIAR_QQU | TIP_NIQAR | TIP_NIQAR_GALUAR | TIP_NIQAR_LUAR | TIP_NIQAR_NNGIT | TIP_NIQAR_RIIR | TIP_NIQAR_SIMA | TIP_NIQAR_SIR | TIP_NIQAR_SSA | TIP_NIQAR_TARIAQAR | TIP_NIQAR_TARIAQAR_GALUAR | TIP_NNGIT | TIP_NNGIT_TUUR | TIP_QQAAR | TIP_QQAAR_NIAR | TIP_QQAMMIR | TIP_QQU | TIP_RIAR | TIP_RIIR | TIP_SIMA | TIP_SIMA_LIR | TIP_SINNAA | TIP_SINNAA_GUMA | TIP_SINNAA_LIR | TIP_SINNAA_LIR_SSA | TIP_SINNAA_NNGIT | TIP_SINNAA_NNGUR_SSA | TIP_SSA | TIP_SSA_NNGIT | TIP_SSA_NNGIT_NIR | TIP_TAR | TIP_TAR_LIR | TIP_TAR_SSA | TIP_UTIGE | TITIR | TITIR_HTR | TSAALI | TSAALI_UR | TSIAR | TSIAR_SINNAA | TUAR | TUAR_GALUAR | TUAR_SIMA | TUAR_TAR | TUAR_TAR_NNGIT | TUAR_INNAR | TUAR_INNAR_TAR | TUAR_INNAR_GUMAAR | TUAR_SSA | TUAR_SSA_NNGIT | TUINNAR | TUQ | TUQATIGIIKKUUTAAR | TUQAQ | TUQAQ_SUAQ | TUUR | TUUR_QINA | U | U_NIRAR | UTIGE | USAAR | UTE | VALLAAR | VALLAAR_LIR | VALLAAR_LIR_SIMA | VALLAAR_QE | VIK | VIP | VIP_SIMA | VIP_SINNAA | VIP_SINNAA_NNGIT ;

# Verb
# ----
SET TRANSVERB = 1SgO | 2SgO | 3SgO | 4SgO | 1PlO | 2PlO | 3PlO | 4PlO ;
SET INTRANSVERB = V - TRANSVERB ;
SET VFIN = Ind | Opt | Int | Imp ;
SET DOTR = QQU | TIP | SAR ;
#SET SGOBJVERB =  1SgO | 2SgO | 3SgO | 4SgO ;
#SET PLOBJVERB =  1PlO | 2PlO | 3PlO | 4PlO ;
LIST 3SGSUBJVERB = (V 3Sg) ;
LIST 3PLSUBJVERB = (V 3Pl) ;
SET 34SGOBJVERB = 3SgO | 4SgO;
SET 34PLOBJVERB = 3PlO | 4PlO ;
SET VERBNOT3SGSUBJ = V - 3SGSUBJVERB ;
SET VERBNOT3PLSUBJ = V - 3PLSUBJVERB ;
SET 12SUBJVERB = (V 1Sg) | (V 1Du) | (V 1Pl) | (V 2Sg) | (V 2Du) | (V 2Pl) ;
#SET NONIMPVERB = (V Ind) | (V Cau) | (V Int) | (V Par) | (V Ite) | (V Inf) | (V InfNeg) | (V Opt) | (V Con) | (V Vok) ;
SET V-NOT-Par = V - Par ;
SET VERB-NOTINF = V - Inf - InfNeg ;

# Forståelsesspørgsmål LIST vs. SET. Hvorfor ikke LIST en definition som fx 3SGSUBJVERB og bagefter SET?
# Svar det ser ut til at det må vere LIST når det kan vere LIST.
# Spørgsmål om god stil: Er det klogt at samme tags indgår i forskellige set?


# Nominer
# -------
SET KASUS = Abs | Rel | Trm | Abl | Lok | Aeq | Ins | Via ;
SET NOT-REL = KASUS - Rel ;
SET OBLIQUE =  Trm | Abl | Lok | Aeq | Ins | Via ;

SET POSSESSUM3 = (N 3SgPoss) | (N 3PlPoss) | (N* 3SgPoss) | (N* 3PlPoss) | (Num 3SgPoss) | (Num 3PlPoss) ;
SET POSSESSUM4 = (N 4SgPoss) | (N 4PlPoss) | (N* 4SgPoss) | (N* 4PlPoss) ;
SET POSSESSUM12 = (N 1SgPoss) | (N 2SgPoss) | (N* 1SgPoss) | (N* 2SgPoss)| (N 1PlPoss) | (N 2PlPoss) | (N* 1PlPoss) | (N* 2PlPoss) ;

SET POSSESSUM = POSSESSUM12 OR POSSESSUM3 OR POSSESSUM4 ; 

SET APPELLATIV = N - Prop ;
#SET POSSESSUM = (N 1SgPoss) | (N 2SgPoss) | (N 3SgPoss) | (N 4SgPoss) | (N 1PlPoss) | (N 2PlPoss) | (N 3PlPoss) | (N 4PlPoss) | (N* 1SgPoss) | (N* 2SgPoss) | (N* 3SgPoss) | (N* 4SgPoss) | (N* 1PlPoss) |  (N* 2PlPoss) | (N* 3PlPoss) | (N* 4PlPoss); 

LIST POSS_ABBR = "sap" ; # forkortelser, der oftest anvendes som possessor

# Partikler
# ---------
LIST KONJUNKTION = "aamma" "kisianni" "imaluunniit" "taava" ;
LIST ADVERBIUM = "ima" ;
LIST FOKUSPART = "tassa" "aali" "sunaaffa" ;
LIST KONCESSIV = "naak" "uffa" ;

# Lexical sets
# ==============

# Verbernes leksikalske klasser
# =============================

LIST LOKVERB = "najugaq" "najugaqar" "ilinniar" ;

LIST ABLVERB = "ani" ;

LIST TRMVERB = "iser" ;

SET MOVE-VERB = LOKVERB | ABLVERB | TRMVERB ;

LIST ORATIOOBLVERB = "ilisimatitsissut" "isuma" "isummer" "naatsorsor" "nalu" "nalunaar" "nalunaarut" "neriup" "oqar" "qular" "qularnar" "paasi" "siunnersor" "taku"  ;

LIST VEXCLAM = "sunaaffa" "uffa" "aali" "naak" ;

LIST humverb = "suli" ; # Verb der vil ha humane subj, og ikke er i andre set
LIST animalverb = "qilup" "pangalip" ; #forudsætter subjekt ANIMAL
SET HUMVERB = humverb OR ORATIOOBLVERB ; # alle verb  der vil ha humane subj

LIST PSEUDO-HTR = "neri" ;
LIST TEMPUSVERB = "qaanger" ;

# Nominernes leksikalske klasser
# =============================
LIST MAANED = "januaari" "februaari" "marsi" "apriili" "maaji" "juuni" "juuli" "aggusti" "augusti" "septembari" "oktobari" "novembari" "decembari";
LIST SPATIAL = "sani" "ati" "quli" "at" "ilu";
LIST USPATIAL = "sanik" "ateq";

LIST ANIMAL = "qimmeq" "qitsuk" "puisi" ;
LIST ABSTRACT = "taaq" ;

LIST PLACE = "illu" ;


LIST EDIBLE = "neqi" ;
LIST DRINKABLE = "kaffi" ;

SET THING = EDIBLE | DRINKABLE ;
LIST INSTRUMENT = "alussaat" ;

LIST TIME = "sapaat" "qeqqa" ;
LIST NUMHOVED = "krone" "milliardi" "million" "dollari" ;
LIST COMPOUND_N = "Windows" "Linux" "program" ;

# Proprier
# Desse skal vi hente frå leksikon

LIST Mal = "Trond" "Per" ;
LIST Fem = "Kirsten" ;
LIST Sur = "Rasmussen" "Trosterud" ;

SET FIRSTNAME = Mal | Fem | ("Nuka") ;
SET NAME = FIRSTNAME | Sur ;
SET NOT-FIRST = WORD - FIRSTNAME ;

LIST FAM = "illoq" ;

SET HUMAN = FAM OR NAME ;



# Tags
# ====
LIST @PRED = @PRED ; 		 # predikat
LIST @SUBJ> = @SUBJ> ;		 # subjekt med pred t.h.
LIST @<SUBJ = @<SUBJ ;		 # subjekt med pred t.v.
LIST @OBJ> = @OBJ> ;		 # objekt med pred t.h.
LIST @<OBJ = @<OBJ ;		 # objekt med pred t.v.
LIST @ADVL> = @ADVL> ;		 # adverbial med kerne t.h.
LIST @<ADVL = @<ADVL ;		 # adverbal med kerne t.v.
LIST @CONJ = @CONJ ;
LIST @CON = @CON ;	# erstatter de foelgende ved conditionalis - baade coref og non-coref
LIST @CAU = @CAU ;	# erstatter de foelgende ved causativ - baade coref og non-coref
LIST @CL-ADVL> = @CL-ADVL> ; # neksusadverbial der modificerer t.h. 
LIST @CL-<ADVL = @CL-<ADVL ; # neksusadverbial der modificerer t.v.
LIST @CL-CIT> = @CL-CIT> ;	 # predikat i oo der står til et matriseverb t.h. CL-OBJ (oo oratobl)
LIST @CL-<CIT = @CL-<CIT ;	 # predikat i oo der står til et matriseverb t.v. (CIT=sitat)
LIST @i-SUBJ> = @i-SUBJ> ;   # subjekt der står til inkorporeret dotr verbal t.h.
LIST @i-<SUBJ = @i-<SUBJ ;   # subjekt der står til inkorporeret dotr verbal t.v.
LIST @MIK-OBJ> = @MIK-OBJ> ; # indef objekt ved HTR til hoejre
#LIST @<MIK-OBJ = @<MIK-OBJ ; # indef objekt ved HTR til venstre #Findes den kontekst overhovedet??
LIST @i-OBJ> = @i-OBJ> ;     # objekt der står til inkorporeret verbal t.h.
LIST @i-<OBJ = @i-<OBJ ;	 # objekt der står til inkorporeret verbal t.v.
LIST @i-ADVL> = @i-ADVL> ;	 # adverbial der står til inkorporeret verbal t.h.
LIST @i-<ADVL = @i-<ADVL ;	 # adverbial der står til inkorporeret verbal t.v.
LIST @INTERJ = @INTERJ ;	 # interjektion
LIST @PROP> = @PROP> ;		 # proprium til venstre i propriumskede
LIST @HNOUN = @HNOUN ;		 # løst nomen uden predikat
LIST @HEADLINE = @HEADLINE ;	# loes partikel eller verbum i overskrifter
LIST @>N = @>N ;		     # prenominalt adled (slagter Hansen)
LIST @N< = @N< ;	    	 # postnominalt adled
LIST @i->N = @i->N ;		 # adled der står til inkorporeret nominal t.h.
LIST @i-N< = @i-N< ;		 # adled der står til inkorporeret nominal t.v.
LIST @POSS = @POSS ;		 # possessor
LIST @>V = @>V ;                 # adled til verbum # asaneq ajorpara.
LIST @FOC = @FOC ;		# partikler, der erstatter et verballed
LIST @X = @X ;                   # dette ord har endnu ikke fået en mapping-regel
LIST @TEST = @TEST ;
LIST @CL->N = @CL->N ;       # Relativsætning stående til nominal til højre
LIST @INF->N = @INF->N ;	# tag forbeholdt de saerlige adnominale transitive infinitiver uden objekt (ilitsoqqussaralugu oqaatsit)
LIST @PARATAKSE_INF->N = @PARATAKSE_INF->N ; # Placeholder for infinitiv i paratakse med substantiv. Skal udskiftes i allersidste section
LIST @PRED2 = @PRED2 ; # saettes paa verbet i en bunden ledsaetning
SET TAGGED = @PRED OR @SUBJ> OR @<SUBJ OR @OBJ> OR @<OBJ OR @ADVL> OR @<ADVL OR @CL-ADVL> OR @CL-<ADVL OR @CL-CIT> OR @CL-<CIT OR @i-SUBJ> OR @i-<SUBJ 
OR @i-OBJ> OR @i-<OBJ OR @i-ADVL> OR @i-<ADVL OR @INTERJ OR @PROP> OR @HNOUN OR @>N OR @N< OR @i->N OR @i-N< OR @POSS OR @>V ;

# Syntaks
# =======
# Per Trond.trm butikken.abs passe-ba.
# su  O         iO       i     y  => O er iS viss vi har iO <== (O kan passiveres)
# su  iS        iO       i     y  => iS er O når vi har iO
# S   A         O        PRED = syntaks modulo kasus

LIST @CL-ARG> = @CL-ADVL> @CL-CIT> ; # Disse vil ha V t.h.
LIST @CL-<ARG = @CL-<ADVL @CL-<CIT ;

LIST @ARG> = @SUBJ> @OBJ> @ADVL> @>V ; # Disse vil ha V t.h.
LIST @<ARG = @<SUBJ @<OBJ @<ADVL ;

SET @ALL-ARG> = @ARG> OR @CL-ARG> ;
SET @ALL-<ARG = @<ARG OR @CL-<ARG ; 


LIST @ALLOBJ> = @OBJ> @i-OBJ> ;
LIST @<ALLOBJ = @<OBJ @i-<OBJ ;

LIST @ALLSUBJ> = @SUBJ> @i-SUBJ> ;
LIST @<ALLSUBJ = @<SUBJ @i-<SUBJ ;
LIST @ALLSUBJ = @ALLSUBJ> @<ALLSUBJ ;

 # Kladdenotatar, skal slettast
 # SU: abs(iv), rel(tv), trm(dotv), ins; 4subm
 # DO:  abs(tv,ditv), ins(htv); 4subm
 # IO: trm(ditv,dotv)
 # iv:   subj:abs
 # htv:  subj:abs obj:ins
 # tv:   sub:rel obj:abs 
 # Evap      panini         Jensimut    paareqquaa.
 # Evap      pania          Jensimut    paareqquaa.
 # Evap      pania          Jensimut    paareqquaa.
 # Evap      Paninnguaq     Jensimut    paareqquaa.
 # @SUBJ     @OBJ           @OBJ/@ADVL     "Eva bad jens passe Paninnguaq"
 #           @iOBJ          @IOBJ/@iSUBJ          
 # Evap      Jensj        oqarfigaa panini     paareqqullugu
 # Evap      Jensi        oqarfigaa pania      paareqqullugu           
 # Evap      Jensi        oqarfigaa Paninnguaq paareqqullugu
 # subj       obj        pred      o
 # Eva bad Jens passe sin datter
 #         Jensi      iserpoq
 #         Jensi      iserpoq
 #         Evap Jensi iseqquaa.
 #         
 #         tanna tassa tassaavoq
 #         Jensi tasaavoq Olip ernera.
 #         Hansi tassa 
         
 ###     Eva      bad            Jens      passe    Paninnguaq
 # dotv: subj:rel så             obj:trm   [cl-oa   <obj:abs]
 #       subj:rel fik til at     [subj:trm  cl-obj  <obj:abs]
 # 	    subj:rel lovede         iobj:trm  [cl-obj  <obj:abs]
 # ditv: Sonja     gav hæsten   sukker
 #       subj:rel      iobj:trm obj:abs


# ============ #
# ============ #
# Regelsektion #
# ============ #
# ============ #

MAPPINGS

# Verber - De sikre MAP regler 1. runde

MAP (@PRED) TARGET VFIN ; #Et finit verbum er altid prædikat
MAP (@PRED) TARGET Inf + LU OR InfNeg + LU IF (1 VFIN) ;
MAP (@PRED) TARGET Inf + LU OR InfNeg + LU IF (-1 VFIN) ;
MAP (@PRED2) TARGET INTRANSVERB + Par + 3Pl IF (*-1 Abs + Pl)(NEGATE *0 ORATIOOBLVERB BARRIER VFIN)(1 Abs OR ("\,")); #koncessive saetninger uden konjunktion
# Partikler
#Konjunktioner er konjunktioner, når de indleder en sætning, ellers er de adverbier
MAP (@CONJ) TARGET KONJUNKTION IF (-1 BOS) ; #Flyttet fra 1168 forebygge konflikt med @ADVL>
MAP (@<CL-ADVL) TARGET KONJUNKTION IF (1 EOS)(NEGATE -1 BOS) ; #Sidste betingelse for at undgaa at tagge isolerede konjunktioner
MAP (@HEADLINE) TARGET KONJUNKTION IF (1 EOS)(-1 BOS) ; #Sidste betingelse for at undgaa at tagge isolerede konjunktioner
MAP (@FOC) TARGET FOKUSPART + (Part) IF (NEGATE *0 V) ;
MAP (@CONJ) TARGET ("tassa") + Part IF (-*1 V OR vn)(*1 V OR vn OR Prop OR ("\:")) ; #"tassa" brugt foer forklarende hovedsaetning eller i consekutiv bisaetning
MAP (@i-ADVL>) TARGET (Part) IF (1 N + @<SUBJ) ;
MAP:AddPartConjAbs (@CONJ) TARGET Part IF (-1 Abs)(*1 Abs BARRIER VFIN) ;
MAP:AddPartConjRel (@CONJ) TARGET Part IF (-1 Rel)(*1 Rel BARRIER VFIN) ;
MAP:Nexusadverbial (@CL-ADVL>) TARGET Part IF (-1 BOS)(NEGATE 0 KONJUNKTION) ;

# Nominer - De sikre MAP regler
MAP (@<SUBJ) TARGET (Abs) IF (*-1 @FOC BARRIER (V));
MAP (@HNOUN) TARGET APPELLATIV + (Abs) OR Prop + (Abs) IF (NEGATE *0 VERB-NOTINF)(NEGATE 1 TRANSVERB + Inf OR TRANSVERB + InfNeg);
MAP (@i-ADVL>) TARGET Trm IF (1 N + (vn)) ;
MAP:SgObjGE (@OBJ>) TARGET APPELLATIV + Abs + Sg OR Prop + Abs + Sg IF (*1 Rel)(*1 TRANSVERB + GE + 3SgO BARRIER VERB-NOTINF) ; 
MAP:SgObj (@OBJ>) TARGET APPELLATIV + Abs + Sg OR Prop + Abs + Sg IF (1 TRANSVERB + 3SgO) ; 
MAP (@OBJ>) TARGET APPELLATIV + Abs + Pl IF (1 TRANSVERB + 3PlO) ; 
MAP (@POSS) TARGET POSS_ABBR IF (1 POSSESSUM3); #sap. akunnera
MAP (@<N) TARGET Trm IF (-1 ("qujanaq"))(NEGATE *1 V) ;
MAP (@<N) TARGET Trm IF (-1C Trm)(NEGATE *1 V) ;
#At adskille Inf's objekt fra V's subjekt
MAP (@OBJ>) TARGET Abs + Sg IF (1 Abs + Sg)(2 Inf + 3SgO OR InfNeg + 3SgO);

# Partikler anden runde
MAP (@i-ADVL>) TARGET (Part) IF (1 N + @<SUBJ) ;
MAP (@ADVL>) TARGET Part IF (1 V)(NEGATE *-1 V);
ADD (@ADVL>) TARGET Part IF (1 V);

# Nominer anden runde
ADD (@POSS) TARGET (Rel) IF (1 POSSESSUM3) ; #Ikke 1 men *1 pga. Piitap qangaaniilli soqutigisaa
ADD (@MIK-OBJ>) TARGET Ins IF (*1 HTR); #Ikke MAP fordi ogsaa ADVL> mulig
MAP (@SUBJ>) TARGET Rel + Sg IF (*1 TRANSVERB + (3Sg) OR (4Sg) BARRIER POSSESSUM3) ;
MAP (@SUBJ>) TARGET Rel + Pl IF (*1 TRANSVERB + (3Pl) OR (4Pl) BARRIER POSSESSUM3) ;
MAP (@SUBJ>) TARGET Abs + Sg IF (*1 INTRANSVERB + VERB-NOTINF + 3Sg OR INTRANSVERB + VERB-NOTINF + 4Sg BARRIER POSSESSUM3)(NEGATE -1 ("\(")) ; 
#MAP (@SUBJ>) TARGET Abs + Sg IF (*1 INTRANSVERB + VERB-NOTINF + (3Sg) OR (4Sg) BARRIER POSSESSUM3)(NEGATE -1 ("\(")) ; #Parantetiske indskud andet steds hen
MAP (@SUBJ>) TARGET Abs + Pl IF (*1 INTRANSVERB + (3Pl) OR (4Pl) BARRIER POSSESSUM3) ;
MAP (@SUBJ>) TARGET (Rel) IF (*1 TRANSVERB + 34IV BARRIER POSSESSUM3) ;
MAP (@SUBJ>) TARGET N IF (-1 ("\("))(1 ("\)"))(-2 @SUBJ>) ; #Parantetiske indskud samme led som foregående ord
MAP (@<SUBJ) TARGET (Rel) IF (-*1 TRANSVERB + VERB-NOTINF + 34Sg)(0 (Sg)) ;
MAP (@<SUBJ) TARGET (Rel) IF (-*1 TRANSVERB + 34Pl)(0 (Pl)) ;
MAP (@<SUBJ) TARGET (Abs Sg) IF (-*1C INTRANSVERB + (3Sg) OR INTRANSVERB + (4Sg) BARRIER ("tassa"))(NEGATE -1 ("\(")) ;
MAP (@<SUBJ) TARGET (Abs Pl) IF (-*1C INTRANSVERB + (3Pl) OR INTRANSVERB + (4Pl)) ;

#Nominer i absolut kasus er oftest subjekt for intransitivt verbum 
MAP (@SUBJ>) TARGET APPELLATIV + Abs + Sg OR Prop + Abs IF (*1 INTRANSVERB + 3Sg)(NEGATE *1 TRANSVERB + VFIN)(NEGATE 1 Inf + TRANSVERB);

# Ins er tit adled til inkorporet objekt
MAP (@i->N) TARGET (Ins) IF (*1 QAR OR LIK) ; # "tit" skal præciseres eller reduceres til en ADD-regel

# Nominer - ADD regler
#Appellativer i absolut kasus kan være element af syntagmerne subjekt, objekt, tidsangivelse, overskriftsord 

ADD (@SUBJ>) TARGET APPELLATIV + (Abs) OR Prop + (Abs) IF (*1 INTRANSVERB)(NEGATE *1 TRANSVERB)(NEGATE -1 ("\(")) ; 
ADD (@OBJ>) TARGET APPELLATIV + (Abs) OR Prop + (Abs) IF (*1 TRANSVERB) ; 
ADD (@<OBJ) TARGET APPELLATIV + (Abs) OR Prop + (Abs) OR (Adj Abs) IF (-*1 TRANSVERB - Inf BARRIER Inf);
#ADD (@CL-ADVL>) TARGET APPELLATIV + (Abs) IF (-1 BOS)(NOT 0 POSSESSUM) ; #?? Lyder som en fejl. Jf. MAP:Nexusadverbial

#Appellativer og proprier i relativ kasus kan være element af syntagmerne subjekt og possessor 
ADD (@SUBJ>) TARGET APPELLATIV + (Rel) OR Prop + (Rel) IF (*1 TRANSVERB) ; #Husk at definerede sæt ikke skal have paranteser.
ADD (@<SUBJ) TARGET APPELLATIV + (Rel) OR Prop + (Rel) OR (Adj) IF (-*1 TRANSVERB + VERB-NOTINF BARRIER ("\,")) ;

#Nomen i oblik kasus kan være adverbalt adled
#ADD (@ADVL>) TARGET (Lok) OR (Trm) OR (Abl) OR (Via) OR (Aeq) OR (Ins) IF (*1 V OR vn) ;#OR vn tilfoejet 0312
MAP (@ADVL>) TARGET (Lok) OR (Trm) OR (Abl) OR (Via) OR (Aeq) OR (Ins) IF (*1 vn OR V)(NEGATE *1 QAR OR LIK) ;#OR vn tilfoejet 0312

ADD (@<ADVL) TARGET (Lok) OR (Trm) OR (Abl) OR (Via) OR (Aeq) OR (Ins) IF (-*1 V BARRIER ("\,"))(NEGATE -1 ("\(")) ;
MAP (@<ADVL) TARGET N IF (-1 ("\("))(1 ("\)"))(-2 @<ADVL) ; #Parantetiske indskud samme led som foregående ord

# Pronominer - De sikre MAP regler

#"uanga" og "uagut" er subjekt for V i første person hvis ikke adnominalt adled til 1SgPoss eller 1PlPoss resp.
MAP (@SUBJ>) TARGET ("ua" 1Sg Abs) IF (*1 INTRANSVERB + (1Sg) BARRIER (1SgPoss)) ; 
MAP (@SUBJ>) TARGET ("ua" 1Pl Abs) IF (*1 INTRANSVERB + (1Pl) BARRIER (1PlPoss)) ; 

MAP (@>N) TARGET ("ua" 1Sg) IF (1 (1SgPoss)) ;


# Adjektiver - både ADD og MAP regler

ADD (@SUBJ>) TARGET (Adj) IF (*1 INTRANSVERB) ;
ADD (@OBJ>) TARGET (Adj 1Sg) IF (*1 TRANSVERB + (1SgO)) ;
ADD (@SUBJ>) TARGET (Adj 1Sg) IF (*1 TRANSVERB + (1Sg)) ;

#Konjunktioner er konjunktioner, når de indleder en sætning, ellers er de adverbier
#MAP (@CONJ) TARGET KONJUNKTION IF (-1 BOS) ; Flyttet til 1092 for at forebygge konflikt med @ADVL>
MAP (@ADVL>) TARGET ADVERBIUM IF (*1 (V)) ; #ima etc.
MAP (@<ADVL) TARGET ADVERBIUM IF (*-1 (V)) ;

#ADD (@POSSESSUM) TARGET POSSESSUM ;
#ADD (@TEST) TARGET (N* 3Sg IP) IF (-1 Rel Sg) ; #test før følgende

# Numeralier
MAP (@>N) TARGET Num IF (1 NUMHOVED + Abs) ;
MAP (@POSS) TARGET MAANED IF (1 Num + 3PlPoss); #NB Possessum skal vaere plur. da konsekvent underforstaaet 'ulloq' MAANED (ulluisa) Num

# Verber anden runde
MAP (@PARATAKSE_INF->N) TARGET Inf + LU IF (1 Abs + vn) ; #misissueqqissaarutaallunilu oqaasiliuut .. Skal elaboreres!!
MAP (@INF->N) TARGET Inf + 4Sg IF (1 Ins)(2C vn + Abs + Sg)(*1 V + 3Sg); #OBJ pillugu Ins vn+subjekt verbum 
MAP (@INF->N) TARGET Inf + 4Sg IF (1C vn + Abs + Sg)(*1 V + 3Sg); #OBJ pillugu vn+subjekt verbum
MAP (@INF->N) TARGET Inf + 4Sg + 3SgO IF (-1 @SUBJ> OR ("\)") OR ("\"")) ; #Det blev alt for ad hoc med baade citation og parantes


# Nominer anden runde
MAP:SgObjKongruens (@OBJ>) TARGET Abs + Sg IF (1 Abs + Sg + @OBJ>) ; #Kongruent N til N mappet med SgObj. Skal maaske specificeres??
#Herfra og fremad er det igen regler fra Nuuk


#MAP (@CL-ADVL>) TARGET Ite OR Cau OR Inf OR InfNeg OR Con OR Par IF ( *1 V BARRIER N) ; #erstattes 110308 af saerlige CON og CAU
#MAP (@CL-<ADVL) TARGET Ite OR Cau OR Inf OR InfNeg OR Con OR Par IF (*-1 V BARRIER N) ; 
MAP (@CON) TARGET Con ; #ny 110308
MAP (@CAU) TARGET Cau (NEGATE -*1 ORATIOOBLVERB) ; 
MAP (@CL-ADVL>) TARGET Ite OR Inf OR InfNeg OR Par IF ( *1 V BARRIER N) ; #erstattes 110308 af saerlige CON og CAU
MAP (@CL-<ADVL) TARGET Ite OR Inf OR InfNeg OR Par IF (*-1 V BARRIER N) ; 

ADD (@PRED) TARGET Inf OR InfNeg IF (-1 Ins + LU OR Ins + LUUNNIIT)(*1 VFIN);
ADD (@PRED) TARGET Inf OR InfNeg IF (-1 Ins + LU OR Ins + LUUNNIIT)(*-1 VFIN);
ADD (@PRED) TARGET Inf OR InfNeg IF (0 LU OR LUUNNIIT)(*1 VFIN);
ADD (@PRED) TARGET Inf OR InfNeg IF (0 LU OR LUUNNIIT)(*-1 VFIN);
	## Trond atuarpoq allallunilu.
MAP (@CL-CIT>) TARGET Par + TRANSVERB IF (*1 ORATIOOBLVERB);	
#MAP (@CL-CIT>) TARGET Par + INTRANSVERB OR Inf + INTRANSVERB OR InfNeg + INTRANSVERB IF (*1 ORATIOOBLVERB)(-*1 Abs);# BARRIER ("aamma")) ;
#funker ikke ved "naalakkersor" HTR V Par 3Sg @CL-CIT> MAP:1176 / "Helge" N Prop Attr SELECT:1260 @PROP> MAP:1199
MAP (@CL-CIT>) TARGET Par + INTRANSVERB + 3Sg OR Inf + INTRANSVERB + 4Sg OR InfNeg + INTRANSVERB + 4Sg OR Cau + INTRANSVERB + 3Sg IF (*1 ORATIOOBLVERB)(-*1 Abs + Sg);#(NEGATE 1 Prop + Abs OR Prop + Attr);#forstaar ikke Prop begraensningerne 12.03
MAP (@CL-<CIT) TARGET Par + INTRANSVERB + 3Sg OR Inf + INTRANSVERB + 4Sg OR InfNeg + INTRANSVERB + 4Sg OR Cau + INTRANSVERB + 3Sg IF (-*1 ORATIOOBLVERB)(-*1 Abs + Sg)(NEGATE 1 Prop + Abs OR Prop + Attr);
MAP (@CL-<CIT) TARGET Inf + TRANSVERB + 1Pl OR InfNeg + TRANSVERB + 1Pl IF (-*1 ORATIOOBLVERB BARRIER ("\,"));

#Parataktisk oratio obliqua kan (sjaeldent??) vaere efterstillet som i 
#' ... Ilisimatusarfiup pigilissagaa ministerit ... isumaqatigiipput, ... sunniutai maluginiarneqassasut.
MAP (@CL-<CIT) TARGET Par + INTRANSVERB + 3Pl IF (*-1 ORATIOOBLVERB)(*-1 ("\,"))(*-1 Abs + Pl BARRIER ("\,")); 
MAP (@i-SUBJ>) TARGET Trm IF (*1 DOTR);
MAP (@i-OBJ>)  TARGET Trm IF (*1 DOTR)(NEGATE 0 TIME);

#MAP (@ADVL> @<ADVL) TARGET Trm OR Abl OR Lok OR Aeq OR Via ; Erstattet af de to ADD regler under Nominer


ADD (@OBJ>) TARGET Ins IF (*1 PSEUDO-HTR);
MAP (@ADVL> @<ADVL) TARGET Ins ;

MAP (@SUBJ>) TARGET (Abs Sg) IF (*-1 BOS BARRIER N)(NEGATE 0 TIME)(1 INTRANSVERB + Ind + 3Sg);
MAP (@SUBJ>) TARGET (Abs Pl) IF (*-1 BOS BARRIER N)(NEGATE 0 TIME)(1 INTRANSVERB + Ind + 3Pl);

#MAP (@SUBJ> @<SUBJ @<OBJ @OBJ> @HNOUN) TARGET Abs ; #Rettet til følgende ADD-regel 20080123
#ADD (@SUBJ> @<SUBJ @<OBJ @OBJ> @HNOUN) TARGET Abs ; #Går efterhånden ud mod nye mere specifikke MAP under Nominer


MAP (@ADVL>) TARGET (Part NOT KONJUNKTION); #Rettet til ikke at medtage konjunktioner og MAP -> ADD

MAP (@INTERJ) TARGET Interj (NEGATE *0 V) ;

MAP (@PROP>) TARGET Prop IF (1 Prop);

MAP (@PROP>) TARGET Abbr IF (*1 Prop BARRIER NOT-Abbr) ;

MAP (@>N) TARGET (Prop Abbr) IF (1 Num);
MAP (@>N) TARGET Abbr IF (1 Num);
MAP (@>N) TARGET ("§") IF (1 Num);
	## § 5.

MAP (@HNOUN) TARGET Vok ; # Sætningsfragment

MAP (@>N) TARGET Ord IF (1 N) ;
	## 1. august.
	
	
# Denne tag er for alle ord vi ikke har funktion til.

MAP (@X) TARGET WORD ;

# ================== #
# ================== #
      SECTION        #
# ================== #
# ================== #

# De allertidligste disambigueringsregler
#Hoejfrekvente kombinationer
SELECT Num + 3PlPoss IF (-1 MAANED); #NB Possessum skal vaere plur. da konsekvent underforstaaet 'ulloq' MAANED (ulluisa) Num
SELECT ("kalaaleq") + Rel + Pl IF (1 ("oqaaseq") OR ("nuna"));
SELECT ("oqaaseq") + 3PlPoss IF (-1 ("kalaaleq") + Rel + Pl);
SELECT ("nuna") + Sg + 3PlPoss IF (-1 ("kalaaleq") + Rel + Pl);
SELECT ("taamaattoq") + LI IF (-1 BOS) ; #Har vaeret checket for modeksempler, men hidtil ingen fundet. Pas paa!
SELECT ("taamaakkaluartoq") IF (-1 BOS) ; #Har vaeret checket for modeksempler, men hidtil ingen fundet. Pas paa!

#Et par sikre
SELECT 3PlPoss IF (-1 Rel + Pl)(NEGATE *1 TRANSVERB + 3Pl);#siulittaasuisa nuannarineqarnersaat.
SELECT 3Pl IF (-1 Rel + Pl); #siulittaasuisa nuannarineqarnersaraat

#Fjern de helt sikkert overflødige possessumformer, der kan interferere med Par-reglerne
REMOVE Abs + Sg + 4SgPoss IF (NEGATE *1 3SgO OR Cau + 3Sg OR Con + 3Sg BARRIER VFIN);
REMOVE Abs + Pl + 4SgPoss IF (NEGATE *1 3PlO OR Cau + 3Pl OR Con + 3Pl BARRIER VFIN);

#Og overfloedige optativer
REMOVE Opt IF (0 ("suli") OR ("aali") OR ("illit")) ; #naesten helt sikkert partikel/ pronomen
REMOVE Opt + 3Pl IF (NEGATE 1 EOS); #fanger ambiguiteter med LIK+Pl ved at postulere, at Opt altid saetningsfinal 

# Isolering af ledsaetninger - non-coref.
SELECT:TempusTimeN Par IF (0 TEMPUSVERB)(-1 TIME); #Egentlig tidsbisætning
SELECT:TempusUdenTimeN Par + RUTTUR OR Par + GALUAR IF (NEGATE -*1 VFIN) ; 

SELECT:KoncesPost Par + NIQAR IF (*-1 TRANSVERB + VFIN)(1 EOS); #koncessiv uden konjunktion og efterstillet
#RAL-ip assartorsimavai, siorna taamaalinerani 389.000 kubikmeterit assartorneqarsimasut
SELECT Par + 3Sg IF (-*1 N + Sg)(NEGATE *0 VFIN) ; #Participium i overskrifter
#SELECT Par + 3Pl IF (-*1 N + Sg)(NEGATE *0 VFIN) ; #Participium i overskrifter. Opgivet da ikke hit på Qilerutip kipinissaanut piareersimasut
SELECT Par + 3Pl IF (NEGATE *0 VFIN) ; #Participium i overskrifter
SELECT:KoncesSg INTRANSVERB + Par + 3Sg IF (@1 Abs + Sg )(*1 VFIN)(*1 Abs OR Rel)(NEGATE *-1 ("\,")); #Bisætning uden konjunktion
#SELECT:KoncesPl INTRANSVERB + Par + 3Pl IF (@1 Abs + Pl)(*1 VFIN)(*1 Abs OR Rel)(NEGATE *-1 3PlPoss)(NEGATE 1 LU)(NEGATE -1 BOS); #Bisætning uden konjunktion
#rettet da hit på aalakoortut i 'angutit aalakoortut ooqattaasarsimanerat'
SELECT:KoncesPl INTRANSVERB + Par + 3Pl IF (@1 Abs + Pl)(*1 VFIN - ORATIOOBLVERB)(*1 Abs OR Rel OR Pron)(NEGATE 1 LU)(NEGATE -1 BOS OR Con OR Cau)(NEGATE 0 Rel + Pl LINK *1 3PlPoss BARRIER N + Rel + Pl) ; #uden (NEGATE *-1 3PlPoss)
#En tidlig regel for ledsætninger med NIR. Kontekst 3 person for at forebygge hit på NIR + 4Sg (=NIQ+3.Poss+Lok)
SELECT Par + NIR + 3Sg IF (*0 ORATIOOBLVERB)(NEGATE 0 ("nuap"));#Maa kunne adskille nuap+NIR fra nuanner
SELECT Par + NIR + 3Pl IF (*0 ORATIOOBLVERB)(NEGATE 0 ("nuap"));

#Koncessive saetninger med konjunktionen
SELECT:KoncesSgPart INTRANSVERB + Par + 3Sg IF (@1 KONCESSIV BARRIER VFIN);
SELECT:KoncesPlPart INTRANSVERB + Par + 3Pl IF (@1 KONCESSIV BARRIER VFIN);
SELECT:KoncesSgPartPost INTRANSVERB + Par + 3Sg IF (-*1 KONCESSIV BARRIER VFIN);
SELECT:KoncesPlPartPost INTRANSVERB + Par + 3Pl IF (-*1 KONCESSIV BARRIER VFIN);


#SELECT:KoncesPl INTRANSVERB + Par + 3Pl IF (@1 Abs + Pl)(*1 VFIN - ORATIOOBLVERB)(*1 Abs OR Rel OR Pron)(NEGATE *-1 3PlPoss)(NEGATE 1 LU)(NEGATE -1 BOS OR Con OR Cau)(NEGATE 0 Rel + Pl LINK *1 3PlPoss BARRIER N + Rel + Pl) ; #Bisætning uden konjunktion
#SELECT:KoncesPl INTRANSVERB + Par + 3Pl IF (@1 Abs + Pl)(*1 VFIN - ORATIOOBLVERB)(*1 Abs OR Rel)(NEGATE *-1 3PlPoss)(NEGATE 1 LU)(NEGATE -1 BOS)(NEGATE 0 Rel + Pl LINK *1 3PlPoss BARRIER N + Rel + Pl) ; #Bisætning uden konjunktion. Hitter innuttaasut i '@CON innuttaasut nunani ineriartortitani inuuniarnermi atugassarititaasut qaffaseqataannik inuuneqalernissartik naatsorsuutigisariaqassavaat .. ANFØRENDE SÆTNING' 



REMOVE Par IF (-1 Trm)(1 Prop);
REMOVE Par IF (*-1 ("\,"))(*1 ("\,"))(NEGATE *0 VFIN BARRIER ("\,")); # Kommaafgrænset apposition til proprium
#Bisætning med participium står ikke uden subjekt umiddelbart efter finit Cau og Con
REMOVE INTRANSVERB + Par + 3Pl IF (-1 Con OR Cau LINK *-1 Abs) ;
REMOVE INTRANSVERB + Par + 3Pl IF (NEGATE *0 ORATIOOBLVERB); 
#REMOVE INTRANSVERB + Par + 3Sg IF (NEGATE *0 ORATIOOBLVERB BARRIER ("\,")); #komma forekommer også mellem oratio recte og obliqua
REMOVE INTRANSVERB + Par + 3Sg IF (NEGATE *0 ORATIOOBLVERB) ; #komma forekommer også mellem oratio recte og obliqua
REMOVE INTRANSVERB + Par + 3Pl IF (1 3PlPoss + Sg)(*1 TRANSVERB + 3SgO) ;
REMOVE INTRANSVERB + Par + 3Pl IF (NEGATE *-1 Abs + Pl - 4SgPoss BARRIER V)(NEGATE *0 ORATIOOBLVERB)(NEGATE 1 VFIN); #Lokalis læst som possessum skaber problemer
REMOVE INTRANSVERB + Par + 3Pl IF (1 Con)(2 TRANSVERB + 3Pl) ; #Det er subjektet
REMOVE INTRANSVERB + Par + 3Sg IF (NEGATE *-1 Abs + Sg BARRIER V)(NEGATE *0 ORATIOOBLVERB)(NEGATE 1 VFIN) ;
REMOVE INTRANSVERB + Par + 3Sg IF (0 Abs + Sg)(1 Inf + 3SgO);# OR InfNeg +3SgO);
REMOVE Par + 3Pl IF (1 Rel + Pl)(2 Rel + Pl)(3 Ins)(4 Rel + Pl)(5 Lok + 3PlPoss) ;
REMOVE Par + 3Pl IF (1 Rel + Pl)(2 Ins)(3 Rel + Pl)(4 Lok + 3PlPoss) ;
REMOVE Par + 4Sg IF (-1 Rel + Pl)(0 3PlPoss + NIQ);
REMOVE Par + 3Pl IF (-1 N + Pl)(1 VFIN + ORATIOOBLVERB)(*1 Par) ; #Forebygger hit på amerlanerussuteqartut i 'Qallunaat amerlanerussuteqartut isumaqarput or. obliqua*


#SELECT INTRANSVERB + Par + 3Sg IF (*-1 Abs + Sg BARRIER VFIN OR Inf);
#SELECT INTRANSVERB + Par + 3Pl IF (*-1 Abs + Pl)(NEGATE *0 ORATIOOBLVERB BARRIER VFIN)(1 Abs OR ("\,")); #koncession og #temporal uden konjunktion fulgt af subjekt

SELECT Par + INTRANSVERB + 3Sg IF (*1 ORATIOOBLVERB + V BARRIER ("\,"))(*-1 Abs + Sg)(NEGATE 0 LU LINK -1 Abs + Sg); 
SELECT Par + INTRANSVERB + 3Sg IF (*-1 ORATIOOBLVERB + V)(*-1 Abs + Sg)(NEGATE 0 LU LINK -1 Abs + Sg); 
SELECT INTRANSVERB + Par + 3Pl IF (*-1 ORATIOOBLVERB)(-*1 Abs + Pl BARRIER VFIN)(-*1 LU);
SELECT INTRANSVERB + Par + 3Pl IF (*-1 ORATIOOBLVERB)(-*1 Abs + Pl BARRIER VFIN)(1 LU);

SELECT INTRANSVERB + Par + 3Pl IF (*-1 ORATIOOBLVERB)(-*1 Abs + Pl BARRIER VFIN)(1 EOS);
SELECT INTRANSVERB + Par + 3Pl IF (*1 ORATIOOBLVERB)(-*1 Abs + Pl BARRIER VFIN);


SECTION #Skal kun bruges til at isolere Par - reglerne

#Partikler
SELECT KONJUNKTION IF (-1 BOS);
SELECT Part IF (-1 BOS OR (","))(*1C VFIN) ;
#MAP (@CONJ) TARGET ("tassa") + Part IF (-*1 V)(*1 V) ; Skal sådan noget skrives ind??
#Nominer med tilhængspartikler
REMOVE Prop + MI + Abs IF (*0 Abs) ;
REMOVE Abs + MI + Sg IF (1 INTRANSVERB + 3Pl); #"kingulleq" N Abs Sg MI @SUBJ> "isuma" QATIGIIP vv V Ind 3Pl @PRED

#Proprier og attributter
SELECT COMPOUND_N + Prop + Attr IF (1 COMPOUND_N) ; #Nominer, der bruges compound-lignende (Windows, program, Linux)
SELECT Prop + Attr IF (1 Prop + Sg) ;
REMOVE (Prop Attr) IF (NEGATE 1 Prop);

#Overfloedige possessumformer
SELECT 2SgPoss IF (*0 ("qujanaq"))(NEGATE -1 ("uanga"))(NEGATE *0 VFIN) ; #Kontekst, der maa sikres foer foelgende REMOVE
#REMOVE Abs + 2SgPoss IF (NEGATE *0 INTRANSVERB + 3Sg OR TRANSVERB + 3SgO) ; #Lene
REMOVE Abs + 2SgPoss IF (NEGATE *1 INTRANSVERB + 3Sg OR TRANSVERB + 3SgO BARRIER V OR ("\,"))(NEGATE -*1 TRANSVERB + 3SgO BARRIER (",") OR V) ; #Lenes reformuleres igen
REMOVE 3PlPoss IF (NEGATE -1 Rel + Pl) ;
REMOVE 3SgPoss IF (NEGATE -1 Rel + Sg) ;

REMOVE Via + 1SgPoss IF (NEGATE -1 ("ua"))(NEGATE *0 V + 1Sg) ;
REMOVE Via + 2SgPoss IF (NEGATE -1 ("illit"))(NEGATE *0 V + 2Sg) ;
REMOVE Trm + 1SgPoss IF (NEGATE -1 ("ua"))(NEGATE *0 V + 1Sg) ;
REMOVE Trm + 2SgPoss IF (NEGATE -1 ("illit"))(NEGATE *0 V + 2Sg) ;
REMOVE Abs + Sg + 4SgPoss IF (NEGATE -*1 3SgO CBARRIER Abs + Sg) ; # Lene
REMOVE Abs + Pl + 4SgPoss IF (NEGATE -*1 3PlO CBARRIER Abs + Pl) ; # Lene

#Overfloedige relativer
SELECT Rel + Pl IF (1C 3PlPoss) ; 
REMOVE Rel + Sg IF (NEGATE *1 3SgPoss)(NEGATE *0 TRANSVERB + 3Sg) ;
REMOVE Rel + Pl IF (NEGATE *1 3PlPoss)(NEGATE *0 TRANSVERB + 3Pl) ;
REMOVE Rel + 4SgPoss + Pl IF (NEGATE 1 3PlPoss)(NEGATE *1 TRANSVERB + Par + 3Pl OR TRANSVERB + Cau + 3Pl OR TRANSVERB + Con + 3Pl) ;
REMOVE Rel + 4PlPoss + Sg IF (NEGATE 1 3SgPoss)(NEGATE *1 TRANSVERB + Par + 3Sg OR TRANSVERB + Cau + 3Sg OR TRANSVERB + Con + 3Sg CBARRIER Rel + Sg) ;
SELECT Abs + Pl IF (1 Abs + Pron + Pl); 

#Nominer - kongruens
#SELECT N + $$NUMERUS IF (1 N + $$NUMERUS)(NEGATE *0 V) ; # Vedr. overskrifter og sætningsemner - afventer svar fra Tino
SELECT N + Sg IF (1 N + Sg)(NEGATE *0 V) ; # Vedr. overskrifter og sætningsemner
SELECT Ins + LU IF (-1C Ins) ;
SELECT Aeq + Pl IF (-1C Aeq + Pl);
SELECT Aeq + Pl IF (1C Aeq + Pl);
SELECT Abs + LU + Pl IF (-1C Abs + Pl);
SELECT Abs + LU + Sg IF (-1C Abs + Sg)(NEGATE 0 Rel + Sg LINK 1 3SgPoss);


#Nominer - andre disambigueringer
SELECT Abs + Sg IF (1 Inf + 3SgO) ;
SELECT Abs + Pl IF (1 Inf + 3PlO) ;
SELECT Abs + Sg IF (*1C INTRANSVERB + 3Sg BARRIER Inf + 3SgO)(NEGATE 0 Lok) ;#novembarimi skal ikke vaere Abs+MI
SELECT N + NIQAR + NIQ + Sg; #Passivt verbalnomen i pluralis er sjaeldent
SELECT N + NIQAR + TUQ + Sg; #Passivt verbalnomen i pluralis er sjaeldent
SELECT N + NIQAR + NIRSAQ; #Passivt verbalnomen i pluralis er sjaeldent
SELECT Ins + LU IF (-1 VFIN)(1 Inf OR InfNeg) ;
REMOVE Aeq + Pl IF (0 Aeq + Sg)(NEGATE 0 POSSESSUM) ;

#Pronominer
SELECT Pron + Pl IF (1C N + Pl) ;

#Verber
REMOVE (Inf 1Sg) IF (NEGATE *0 VFIN + 1Sg);
REMOVE (Inf 2Sg) IF (NEGATE *0 VFIN + 2Sg);
REMOVE (Inf 1Pl) IF (NEGATE *0 VFIN + 1Pl);
REMOVE (Inf 2Pl) IF (NEGATE *0 VFIN + 2Pl);
REMOVE Opt IF (*0C Ind) ;
REMOVE Int IF (*0C Ind) ;
REMOVE Imp IF (*0C Ind) ;
SELECT NIQAR + V IF (-*1 Abs + Sg) ; #Disambiguerer NIQAR fra NIQ efterfulgt af QAR
SELECT Inf + 4Sg IF (1 Ins)(2C vn + Abs + Sg)(*1 V + 3Sg); #OBJ pillugu Ins vn+subjekt verbum
SELECT Inf + 4Sg IF (1C vn + Abs + Sg)(*1 V + 3Sg); #OBJ pillugu vn+subjekt verbum
SELECT Inf + 4Sg IF (*1 VFIN + 3Sg) ;
SELECT Inf + 4Pl IF (*1 VFIN + 3Pl) ;
SELECT InfNeg + 4Sg IF (*1 VFIN + 3Sg) ;
SELECT InfNeg + 4Pl IF (*1 VFIN + 3Pl) ;


SECTION #dette er kun til testbrug
# Verbernes SELECT og REMOVE
# -------

# De underordnede modi

REMOVE (Inf 4Pl) IF (1 (N Abs Sg @<SUBJ));



REMOVE ("asap" Inf) IF (NEGATE *-1 ("nateq")) ; #Pers regel 0608 
REMOVE (Int) IF (*1 Ind) ;
	# Et unikt verb
SELECT Ind IF (NEGATE *-1 Ind)(NEGATE *1 Ind OR ("?"));

SELECT INTRANSVERB + (Inf) + (4Sg) IF (NEGATE -1 ("immi")) ; 
#Hvorfor giver fst den transitive option??
# skriv til REMOVE

#Nominernes SELECT og REMOVE
SELECT SPATIAL + (Sg) IF (0 POSSESSUM) ;

REMOVE SPATIAL IF (0 QAR) ;
SELECT Prop IF (NEGATE -1 BOS);

SELECT Attr IF (0 Prop)(1 (Prop Rel) OR (Prop Abs));



SELECT (Ins @i->N) IF (-1 (Ins @i->N))(0 LU)(*1 QAR OR LIK) ;
SELECT (Ins @i->N) IF (-*1 QAR OR LIK) ;
#Numeruskongruent subjekt til højre er sikker, hvis intet finit verbum til venstre
SELECT (@<SUBJ Pl Abs) IF (-*1 INTRANSVERB + 3Pl BARRIER ("\,"))(NEGATE *1 VFIN) ;
SELECT (@<SUBJ Sg Abs) IF (-*1 INTRANSVERB + 3Sg)(NEGATE *1 VFIN) ;
SELECT (@<SUBJ Pl Rel) IF (-*1 TRANSVERB + 3Pl)(NEGATE *1 VFIN) ; 
SELECT (@<SUBJ Sg Rel) IF (-*1 TRANSVERB + 3Sg BARRIER ("\,"))(NEGATE *1 VFIN) ;

SELECT (@POSS Pl) IF (1 POSSESSUM + 3PlPoss) ;
SELECT (@POSS Sg) IF (1 POSSESSUM + 3SgPoss) ;


#Partiklernes SELECT og REMOVE
SELECT (@FOC Part) IF (*1 (@<SUBJ) BARRIER V ) ;

# Tidlige syntaktiske regler
SELECT (N* 3Sg IP) IF (-1 (Rel Sg)) ; #Virker ikke 18.1. sen aften

#SELECT @POSSESSUM IF (-1 Rel Sg) (0 3Sg); 
#SELECT SPATIAL + Sg IF (0 POSSESSUM) ;
SELECT @HNOUN IF (NEGATE *0 V - Inf OR V - InfNeg) ;

REMOVE @<ARG IF (NEGATE *-1 V)(NEGATE *-1 (@FOC)) ;
REMOVE @ALL-ARG> IF (NEGATE *1 V) ; # Ikke @ARG> fordi ingen V t.h.
#REMOVE @ARG> IF (NEGATE *1 V) ; #min formulering
REMOVE @ARG> IF (*1C @<ARG BARRIER V);
REMOVE @<ARG IF (*-1C @ARG> BARRIER V); # Ikke @<ARG fordi ingen V før @ARG> t.v.


# One-cohort disambiguation - cycle 0

SELECT Prop IF (NEGATE -1 BOS)(0 Prop) ;
	## Ilalu Nuup eqqaani iliverpassuit.

#REMOVE @SUBJ> IF (NEGATE 0 ANIMAL)(*1 @PRED animalverb) ; 
REMOVE @SUBJ> IF (NEGATE 0 ANIMAL)(*1 animalverb) ; 
	
REMOVE ("kaa" Interj) IF (0 ("Kaali"));

SELECT ("Kina") IF (-1 BOS)(NEGATE *1 ("?")); #BOS = Beginning of sentence
SELECT ("kina") IF (-1 BOS)(*1 ("?"));
	## Kina aniva.


# Many-cohort disambiguation - cycle 1

# ======== #
# Navneord # 
# ======== #

# ======== #
# Verber   # 
# ======== #


SELECT (3Sg) IF (NEGATE *-1 (@SUBJ> 3Sg))(NEGATE *1 (@<SUBJ 3Sg))(-1*W (@PRED 3Sg));
#SELECT (3Sg) IF (-1*W (@PRED 3Sg));
REMOVE Attr IF (0 Prop)(NEGATE 1 Prop);


REMOVE N IF (0 ("Nuuk" Prop Lok));
	## Nuummi.

	# Et unikt verb
SELECT Ind IF (NEGATE *-1 Ind)(NEGATE *1 Ind OR ("?"));


REMOVE @POSS IF (NEGATE *1 POSSESSUM3) ; #Pers tilfoejelse 0608

# In



# Part


REMOVE Interj IF (0 Part)(1 (@HNOUN));
	## Tassa illu.

SELECT (@CL->N) IF (-1C @ARG>);

SELECT 4Sg IF (0C (@CL->N))(1 (N Sg)); # eksperimentell
SELECT 4Pl IF (0C (@CL->N))(1 (N Pl)); # eksperimentell



# Appositioner
# ------------
SELECT @N< IF (*-1 $$KASUS BARRIER NOT-REL)(0 $$KASUS)(NEGATE 0 Prop);
#SELECT @N< IF (*-1 Abs BARRIER NOT-REL)(0 Abs)(NEGATE 0 Prop);
#SELECT @N< IF (*-1 Lok BARRIER NOT-REL)(0 Lok)(NEGATE 0 Prop);
#SELECT @N< IF (*-1 Trm BARRIER NOT-REL)(0 Trm)(NEGATE 0 Prop);
#SELECT @N< IF (*-1 Abl BARRIER NOT-REL)(0 Abl)(NEGATE 0 Prop);
#SELECT @N< IF (*-1 Ins BARRIER NOT-REL)(0 Ins)(NEGATE 0 Prop);
#SELECT @N< IF (*-1 Aeq BARRIER NOT-REL)(0 Aeq)(NEGATE 0 Prop);
#SELECT @N< IF (*-1 Via BARRIER NOT-REL)(0 Via)(NEGATE 0 Prop);
	## Una ilinniartitsisoq Trond Kirstip uia 40-nik ukioqarpoq.

REMOVE @N< IF (NEGATE -1 N OR @N<);
REMOVE @N< IF (-1 Prop)(0 Prop);
REMOVE ($$NOT-REL @N<) IF (NEGATE *-2 (N $$NOT-REL))(-1 (Rel @POSS))(0 (N 3Sg));
#REMOVE (Abs @N<) IF (NEGATE *-2 (N Abs))(-1 (Rel @POSS))(0 (N 3Sg));
#REMOVE (Lok @N<) IF (NEGATE *-2 (N Lok))(-1 (Rel @POSS))(0 (N 3Sg));
#REMOVE (Trm @N<) IF (NEGATE *-2 (N Trm))(-1 (Rel @POSS))(0 (N 3Sg));
#REMOVE (Abs @N<) IF (NEGATE *-2 (N Abl))(-1 (Rel @POSS))(0 (N 3Sg));
#REMOVE (Ins @N<) IF (NEGATE *-2 (N Ins))(-1 (Rel @POSS))(0 (N 3Sg));
#REMOVE (Aeq @N<) IF (NEGATE *-2 (N Aeq))(-1 (Rel @POSS))(0 (N 3Sg));
#REMOVE (Via @N<) IF (NEGATE *-2 (N Via))(-1 (Rel @POSS))(0 (N 3Sg));
	## Karen Langgårdip illua.

REMOVE (Rel @N<) IF (NEGATE -1 (N Rel));
	## Atuagaq Trosterudip tiguaa.

REMOVE (Abs @N<) IF (NEGATE -1 Abs OR Rel);
REMOVE (Lok @N<) IF (NEGATE -1 Lok OR Rel);
REMOVE (Trm @N<) IF (NEGATE -1 Trm OR Rel);
REMOVE (Abs @N<) IF (NEGATE -1 Abs OR Rel);
REMOVE (Ins @N<) IF (NEGATE -1 Ins OR Rel);
REMOVE (Aeq @N<) IF (NEGATE -1 Aeq OR Rel);
REMOVE (Via @N<) IF (NEGATE -1 Via OR Rel);

	
# =========== #
#    Fald     # 
# =========== #
  CONSTRAINTS #
# =========== #

	# Hugseregel:
	# subj-abs IV
	# subj-rel obj-abs TV.



# Intransitive sætninger
# ====================== #

SELECT @MIK-OBJ> IF (*1 HTR) ;

REMOVE @ALLOBJ> IF (0 Abs)(*1C INTRANSVERB) ;
	## Trond sinippoq.
	# Trond sover

REMOVE Rel IF (1 (V 3Sg))(NEGATE 1 TRANSVERB);
	## Nuummi najugaqarpoq.
	#  Han bor i Nuuk.

REMOVE (Abs MI) IF (0 Lok)(*1 LOKVERB);
	## Nuummi najugaqarpoq.
    ## Illumi aappaluttumi najugaqarpugut.

REMOVE (Rel 4Sg) IF (0 Lok)(*1 LOKVERB);
    ## Illumi aappaluttumi najugaqarpugut.



REMOVE Pl + @ALLSUBJ> IF (*1C VERBNOT3PLSUBJ BARRIER LU);

#REMOVE (N Sg) + @ALLSUBJ> IF (*1C VFIN BARRIER LU LINK NOT 0 3SGSUBJVERB)(NEGATE 0 LU); #forstår ikke 20080302


REMOVE (Rel @SUBJ>) IF (*1C INTRANSVERB BARRIER TRANSVERB);
	##       N-Rel N-Abs IV =      poss subj iv
    ## N-Rel N-Rel N-Abs TV = poss subj obj tv-s-o
    
# Transitive sætninger
# ==================== #

SELECT (Pron Abs 1Sg @SUBJ>) IF (*1 (V 1Sg));
	## Uanga takuara.


REMOVE @SUBJ> IF (0 N)(NEGATE 0 LU)(*1C 12SUBJVERB BARRIER V);
REMOVE @SUBJ> IF (0 (Pron 3Sg))(*1C 12SUBJVERB BARRIER V);

SELECT (Pl @OBJ>) IF (0 (Abs Pl))(*1 34PLOBJVERB);
SELECT (Pl @OBJ>) IF (0 (Abs Pl))(*-1 34PLOBJVERB);
	## Aviisit atuarpavut.

SELECT (N Abs Sg) + @ALLOBJ> IF (*1 34SGOBJVERB BARRIER Sg +  @ALLOBJ>)(NEGATE *1 ORATIOOBLVERB);
	#Pers aendring 0608

SELECT (Par @PRED) IF (*1 34SGOBJVERB)(*1 ORATIOOBLVERB); #Pers tilfoejelse 2 0608
 #SELECT (Abs Sg @OBJ>) IF (*1 34SGOBJVERB BARRIER (Sg @OBJ>));
SELECT (Abs Pl @OBJ>) IF (*1 34PLOBJVERB BARRIER (Pl @OBJ>));
	## Kaalip qimmini toquppaa.



SELECT (Abs Sg) IF (0C (@SUBJ>))(*1C 3SGSUBJVERB);


# NP-er
# -----

SELECT (Abs Sg) IF (-1 (Abs Sg))(0 LU)(NEGATE 0 Rel LINK 1 POSSESSUM3);
	## Jaakup Juda qatanngutaalu.

SELECT Sg + Abs + @HNOUN IF (*-1 Sg + Abs + @HNOUN);


REMOVE @SUBJ> IF (0 Rel)(1C (Abs @SUBJ>));
	## Nukap nulia Linimik ateqarpoq.
	# Nukan vaimon nimi on Line.
	# Gives Rel Poss

REMOVE (N @POSS) IF (NEGATE 1 POSSESSUM3 OR LU);
	## Nukap Piitap illua qalipappaa.
	#  ^^^^^

REMOVE (N @POSS) IF (1 LU)(NEGATE 2 POSSESSUM3);

REMOVE @SUBJ> IF (*-1C (@SUBJ>) BARRIER LU OR V )(NEGATE 0 LU);
	## Nukap Piitap illua qalipappaa.
	## Nukap Piitap ernerata illua qalipappaa.
    #        ^^^^^^

REMOVE @PROP> IF (*1 NOT-FIRST BARRIER Sur LINK NOT 0 Sur);
	## Per Morten Lynge
	## Per illu Lynge
	## Per Langgård   # 
	

REMOVE @POSS IF (1C POSSESSUM4);

REMOVE (POSSESSUM @HNOUN) IF (NEGATE -1 (@POSS)) ;


# Verbal disambiguering
# =====================

#SELECT V IF NIAR ; #En test for at se hvordan derivati-reglerne opfører sig

	# Eit sikkert VFIN til venstre utelukker VFIN til høgre
REMOVE VFIN IF (*-1C VFIN)(NEGATE 0 LU); 

	# Unik VFIN
REMOVE VFIN IF (*1C VFIN LINK NOT 0 LU); 
	## Taamaattumik tamatta nuannaarpugut.

REMOVE (@CL-CIT>) IF (0 @CL->N)(1 N) ; # idiotregel



SELECT Par IF (*-1 UNA BARRIER V-NOT-Par);
	## Trondimuna tigusimagaa.
	
REMOVE Par IF (-1C N)(NEGATE *-1 VEXCLAM)(NEGATE *1 ORATIOOBLVERB); #forstår ikke reglen 20080302
 
SELECT Par IF (NEGATE *-1 VFIN)(NEGATE *1 VFIN OR ("?"));
	## Sunaaffa anereersut.


REMOVE @OBJ> IF (0 Abs)(*1 Par OR Cau)(*-1 ORATIOOBLVERB);
REMOVE @OBJ> IF (0 Abs)(*1 Par OR Cau)(*1 ORATIOOBLVERB); #Pers tilfoejelse01_00608
	## Nalunngilara Trond pikkorissoq.

REMOVE @OBJ> IF (0 Abs)(*1 (Par INTRANSVERB))(*-1 ORATIOOBLVERB);
	## Nalunngilara Trond pikkorissoq.

SELECT @SUBJ> IF (0 Rel)(*1 (Par TRANSVERB))(*-1 ORATIOOBLVERB);

REMOVE @OBJ> IF (0 Abs)(*1 (Par INTRANSVERB))(*-1 ORATIOOBLVERB);
	## Nalunngilara Trond pikkorissoq.

SELECT @SUBJ> IF (0 Rel)(*1 (Par TRANSVERB))(*-1 ORATIOOBLVERB);	
	
REMOVE Opt IF (*-1C Ind) ;
	
REMOVE Int IF (*-1C Ind) ;
	
REMOVE Imp IF (*-1C Ind) ;
	## Kaali anivoq.

REMOVE Opt IF (*1C Ind) ;
REMOVE Int IF (*1C Ind) ;
REMOVE Imp IF (*1C Ind) ;

REMOVE Opt IF (*-1C Ind) ;
	
REMOVE Int IF (*-1C Ind) ;
	
REMOVE Imp IF (*-1C Ind) ;
	## Kaali anivoq.

# Numerus
# -------

SELECT 3Pl IF (*-1 (LU @SUBJ>) LINK -1 (@SUBJ>))(0 (@PRED));
	## Nukap Linillu illortik qalipappaat.
	# Korrekt regel men feil eksempel.

SELECT 3SgO IF (*-1C (Sg @OBJ>)) ;
	## Nukap Linillu illortik qalipappaat.

SELECT 3PlO IF (*-1C (Pl @OBJ>)) ;



# ========================= #	
# Syntaktisk disambiguering #
# ========================= #
         CONSTRAINTS        #
# ========================= #
SELECT @ADVL> IF (1 V) ; #Disambiguerer @ADVL> og @<ADVL
SELECT @ADVL> IF (1 @POSS)(2 @ADVL>) ; #Disambiguerer @ADVL> og @<ADVL i NP med possessor-possessum

SELECT @ADVL> IF (1 V) ; #Disambiguerer @ADVL> og @<ADVL

REMOVE @SUBJ> IF (NEGATE *-1 V)(NEGATE *1 V);
REMOVE @OBJ> IF (NEGATE *-1 V)(NEGATE *1 V);

REMOVE @HNOUN IF (0 (@OBJ>) OR (@SUBJ>));

	# a. try to find headnoun (try to find headlines, fragments)
	# b. if not, it has to be the VFIN



REMOVE @SUBJ> IF (NEGATE *-1 V)(NEGATE *1 V);
REMOVE @OBJ> IF (NEGATE *-1 V)(NEGATE *1 V);

REMOVE @HNOUN IF (0 (@OBJ>) OR (@SUBJ>));

REMOVE HUMAN + Abl IF (0 PLACE + Abl)(NEGATE 0 KKUT)(*1 ABLVERB);
	# NB plussnotasjon! XXX

REMOVE HUMAN + Trm IF (0 PLACE + Trm)(NEGATE 0 KKUT)(*1 TRMVERB);
REMOVE HUMAN + Lok IF (0 PLACE + Lok)(NEGATE 0 KKUT);

REMOVE PLACE + @SUBJ> IF (*1 HUMVERB BARRIER @SUBJ>);
	## Illumi sulivoq.

REMOVE FAM IF (NEGATE 0 3Sg)(0 OBLIQUE);
REMOVE @ADVL> IF (0 THING)(*1 PSEUDO-HTR BARRIER V);
REMOVE @OBJ> IF (0 INSTRUMENT)(*1 PSEUDO-HTR BARRIER V);

REMOVE (Prop Ins) IF (0 N + @OBJ>)(*1 PSEUDO-HTR BARRIER V);
REMOVE (@SUBJ> Adj 1Sg) IF (*1 @PRED + (3Sg)) ;

SELECT APPELLATIV IF (0 ("Aleqa")) ;
SELECT ("alla") IF (0 NNGUR + GIARTUR); #ringe sandsynlighed for 'allak' og 'allaq'
SELECT ("nali") IF (0 AFFINGERET); #nali+LIR sandsynlig, nalik+LIR usandsynlig

# ========================= #
#     Final sektion         #
# ========================= #
         CONSTRAINTS        #
# ========================= #
# Foelgende har mest karakter af ad hoc og maa revideres
SELECT AFFINGERET ; # Vælg den analyserede form fred for den leksikaliserede 
SELECT ("illu") IF (0 (@HNOUN)); # "illoq" er usandsynlig i absolut form
SELECT HUMAN IF (-*1 HUMVERB) ; # ikke "illu" før HUMVERB
SELECT ("illu") ; # "illu" mere sandsynlig end "illoq"
SELECT ("aamma") ; # "aamma" mere sandsynlig end "aak"+Rel
SELECT ("ataata") ; # mere sandsynlig end "ataataq"
SELECT ("qaliaq") ; # ad hoc for at forebygge 'hårbåndet' qaleq
REMOVE ("pi") + nv IF (0 ("pi") + vv); # vaelger pi+LIR=TIP frem for pi+LIR+TIP
SELECT ("pi") + nn ; # ad hoc for at disambiguere pi+nn fra pi+vn
SELECT ("allor") IF (NEGATE *0 @ALLSUBJ + ("seqineq")) ; # alluppoq vistnok kun med subjekt "seqineq"
REMOVE IR + nv IF (0 V + vv) ;
REMOVE U + nv IF (0 V + vv) ;
SELECT COMMONAFFSTRING ;


 # Heuristiske regler:
 # I mangel av andre, tidligere regler, vælg de vanlige analyser
 # og smid væk de sjeldne.

# Alle andre regler er prøvet før disse

SECTION
REMOVE Abs + 2SgPoss IF (NEGATE *0 ("illit") LINK 0 Abs + Pl) ;
SELECT (@CL-<CIT) IF (*-1 ORATIOOBLVERB BARRIER V-NOT-Par) ;
SELECT (@CL-CIT>) IF (*1 ORATIOOBLVERB BARRIER V-NOT-Par) ;
REMOVE (@X) ; # (fjerner alle doble.)

#Indsættes i linie 1313
#Forsøger at fjerne BARRIER Prop fra venstre kontekst
#REMOVE Par IF (*-1 ("\,") BARRIER Prop)(*1 ("\,"))(NEGATE *0 VFIN BARRIER ("\,")); # Kommaafgrænset apposition til proprium
