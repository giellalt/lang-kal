! ==================================================== !
! Fil for at generere de morfofonologiske reglerne til !
!             vor grønlandske analysator               !
! ==================================================== !

echo << Vi definerer vokalerne... >>

define Vow [ a | e | i | o | u | y | æ | ø | å |
             A | E | I | O | U | Y | Æ | Ø | Å |
                i2 | i3 ] ;
 
echo << Vi definerer konsonanterne... >>
 
define Cns [ t2 | c2 | b | c | d | f | g | g2 | h | j | k | l | m |
             n | p | q | r | s | t | v | w | x | z |
             B | C | D | F | G | H | J | K | L | M |
             N | P | Q | R | S | T | V | W | X | Z ]  ;
 
echo << Vi definerer sæt af segmenter... >>
define Segment [ Cns | Vow ] ;
define Uvular [ q | r ] ;
define NonUvular [ Cns - Uvular ] ;
 
echo << Vi definerer Dummy-symboler >>
define Dummy [ %> | %< | %TRUNC | %CLIT | %STRUNC | %POSSESSORTRUNC | %PRONTRUNC | %ROD | %likTRUNC | %VCTRUNC | %CVqTRUNC | %VTRUNC ] ;

echo << Vi definerer de ikke fonetisk betingede allomorfer >>
define InfinitivLu [ l -> l l || [ a | u | i ] %> _ ] ;
define c2slet [ c2 -> 0 || Cns _ %> ] ;
define IndikativVu [ v -> p || [ p | r ] %> _ [ u | i | a | o ] ] ;
define Possessortrunc [ i t -> i || [ o | u | i | e ] (Cns) %> (%TRUNC) _ %POSSESSORTRUNC ] ;
define Assibilering1 [ t -> s || i %POSSESSORTRUNC _ ] ;
define PossessortruncVaek [ %POSSESSORTRUNC -> 0 ] ;
define Prontrunc [ s -> 0 || u %> %PRONTRUNC _ ] ;
define Pronvar1 [ u -> 0 || a %ROD _ u n ] ;
define Pronvar2 [ v -> 0 || u _ %ROD u n g ] ;
define Pronvar3 [ v %ROD -> g g || u _ u u n a ] ;
define Pronvar4 [ [ k | g ] %ROD %TRUNC n n a -> n n g a ] ;
define Pronvar5 [ v %ROD (%TRUNC) Cns -> 0 || .#. u _ ] ;

echo << Vi definerer morfofonemiske regler >>
echo << Nogle arkifonemer >>
define TVow [ t2 -> s || Vow ( \Cns ) %> _ ] ; 
define TCns [ t2 -> t || Cns ( \Vow ) %> _ ] ;
       ! "ikke Cns" og "ikke Vow" for at tillade flags imellem

!define xOprydning [ x -> 0 || Cns %> _ ] ;
!define xpAssimilation [ x -> p || [ a | i | u ] %> _ p ] ;
!define xmAssimilation [ x -> m || [ a | i | u ] %> _ m ] ;
define LIKtrunkering [ l i k -> 0 || _ %> %likTRUNC ] ;
define VCtrunkering [ [ e | a | o ] ( [ q | k ] ) -> 0 || _ %> %VCTRUNC ] ;
define SEQtrunkering [ [ s | n ] [ e | a ] q -> 0 || _ %> %CVqTRUNC ] ;
define Vtrunkering [ Vow (Cns) -> 0 || _ %> %VTRUNC ] ;
define kaNasalisering [ k %> a  -> n g a] ; !De sjaeldne forekomster af possessum Z2Z på finalt k
define kiNasalisering [ k %> i  -> n g i] ; !De sjaeldne forekomster af possessum Z2Z på finalt k
 
! Assimilationsrægler
! - - - - - - - - - - 

echo << Vi definerer regressiv assimilation >>
define mAssimilation [ NonUvular -> m || Vow _ %> m ] ; ! panik > panimmik
define nAssimilation [ NonUvular -> n || Vow _ %> n ] ; ! panik > paninnik
define kAssimilation [ NonUvular -> k || Vow _ %> (\Segment) k ] ; 
define lAssimilation [ NonUvular -> l || Vow _ %> l ] ; 
define pAssimilation [ NonUvular -> p || Vow _ %> p ] ; 
define rAssimilation [ NonUvular -> r || Vow _ %> r ] ; 
define sAssimilation [ NonUvular -> s || Vow _ [ %> | %ROD ] s ] ; 
define tAssimilation [ NonUvular -> t || Vow _ %> t ] ; 
define vAssimilation [ NonUvular -> p || Vow _ %> v ] ; 
define qAssimilation [ Cns -> q || Vow _ %> (\Segment) q ] ; 
define gAssimilation [ g -> k || [p | k ] %> _ ] ;

echo << Vi definerer så en del andre rægler >>

define kgFusion [ k %> g2 -> g ] ;
define qgFusion [ [ r | q ] (\Segment) (\Segment) [ g | g2 ] -> r ] ;
define frikativisering [ q -> r || \%TRUNC _ [ %> Segment | %CLIT ] ] ;
define trunkering [ Cns -> 0 || _ %> %TRUNC ] ; 
define TruncVaek [ %TRUNC -> 0 ] ;
define TclitisU [ t -> n || _ %CLIT [ u | a ] ] ;
define Tclitisg1 [ [ t | p | k ] -> n || _ %CLIT g ] ;
define Tclitisg2 [ g -> n g || n %CLIT _ ] ;
define clitisLAssimilation [ Cns -> l || _ %CLIT l ] ;
define clitisMAssimilation [ Cns -> m || _ %CLIT m ] ;
define clitisVAssimilation [ Vow -> a || a %CLIT _ ] ;
define clitisQFrikativisering [ q -> r || _ %CLIT [ m | l ] ] ;
define clitisNasalisering [ k -> n g || _ %CLIT Vow ] ;
define clitis3cons [ NonUvular -> 0 || _ %CLIT t t ] ;
define aasiit1Vokal [ a -> 0 || _ %CLIT a a ] ;
define aasiit2Vokal [ a ( %> ) ( %TRUNC ) a -> a a j || _ %CLIT a a ] ;
define Qageminering [ a q -> q a ||Vow _ %> %STRUNC ] ;
define Qogeminering [ o q -> q u ||Vow _ %> %STRUNC ] ;

echo << Vi definerer vokalregler >>
define schwaC [ [ i2 | i3 ] -> i || _ %> ( %TRUNC ) Cns ] ;
define schwaV [ [ i2 | i3 ] -> a || _ %> ( %TRUNC ) Vow ] ;
define schwaNULL [ i3 -> 0 || t _ [ .#. | %CLIT ] ] ;
define radikalisering [ i -> e, u -> o || _ ( %> ) ( \Segment ) Uvular ] ;
define eafRadikalisering [ e -> i || _ ( %> ) ( %TRUNC ) [ NonUvular | i | u | a ] ] ;
define oafRadikalisering [ o -> u || _ ( %> ) ( %TRUNC ) [ NonUvular | i | u | a ] ] ;
define progressivVassimilering [ Vow -> a || a [ %> | %ROD ] ( %TRUNC ) _ Cns ] ;
define tAssibilering [ t t -> t s || _ [ i | e ] ] ; 

define c2v [ c2 %> v -> p p || Vow _ Vow ] ;
                                                                  
echo << Vi rydder op >>

define IngenArkefonemer [ i2 -> i, i3 -> i, t2 -> t, g2 -> g ] ;
define DummyDeletion [ Dummy -> 0 ] ;
define vSlet [ v -> 0 || u _ [ i | e | a ] ] ; !En rent ortografisk regel

echo << Vi sætter ting sammen >>
                                                                      
read regex [
TCns	![ t2 -> t || Cns ( \Vow ) %> _ ]
.o.
TVow	![ t2 -> s || Vow ( \Cns ) %> _ ]
.o.
InfinitivLu	![ l -> l l || [ a | u | i ] %> _ ]
.o.
c2slet	![ c2 -> 0 || Cns _ %> ]
.o.
c2v ![ c2 %> v -> p p || Vow _ Vow ]
.o.
IndikativVu	![ v -> p || [ p | r ] %> _ [ u | i | a | o ] ]
.o.
Possessortrunc ![ i t -> i || [ e | u | i ] (Cns) %> (%TRUNC) _ %POSSESSORTRUNC]
.o.
Assibilering1 ![ t -> s || i %POSSESSORTRUNC _ ] ;
.o.
PossessortruncVaek ![ %POSSESSORTRUNC -> 0 ]
.o.
kgFusion ![ k %> g2 -> g ]
.o.
LIKtrunkering ![ l i k -> 0 || _ %> %likTRUNC ] ;
.o.
VCtrunkering ![ [ e | a | o ] ( [ q | k ] ) -> 0 || _ %> %VCTRUNC ] ;
.o.
SEQtrunkering ![ [ s | n ] [ e | a ] q -> 0 || _ %> %CVqTRUNC ]
.o.
Vtrunkering ![ Vow (Cns) -> 0 || _ %> %VTRUNC ] ;
.o.
Prontrunc	![ s -> 0 || u %> %PRONTRUNC _ ]
.o.
Pronvar1	![ u -> 0 || a %ROD _ u n ]
.o.
Pronvar2	![ v -> 0 || u _ %ROD u n g ]
.o.
Pronvar3	![ v %ROD -> g g || u _ u u n a ]
.o.
Pronvar4	! [ [ k | g ] %ROD %TRUNC n n a -> n n g a
.o.
Pronvar5	! [ v %ROD (%TRUNC) Cns -> 0 || .#. u _ ]
.o.
!xOprydning	![ x -> 0 || Cns %> _ ]
!.o.
!xpAssimilation	![ x -> p || [ a | i | u ] %> _ p ]
!.o.
!xmAssimilation	![ x -> m || [ a | i | u ] %> _ m ]
!.o.
Qageminering ![ a q -> q a ||Vow _ %> %STRUNC ] ;
.o.
Qogeminering ![ o q -> q u ||Vow _ %> %STRUNC ] ;
.o.
frikativisering ![ q -> r || \%TRUNC _ [ %> Segment | %CLIT ] ] 
.o.
qgFusion	![ [ r | q ] (\Segment) (\Segment) [ g | g2 ] -> r ]
.o.
trunkering	! [ Cns -> 0 || _ %> %TRUNC ]
.o.
TruncVaek	! [ %TRUNC -> 0 ] ;
.o.
vAssimilation	![ NonUvular -> p || Vow _ %> v ]
.o.
gAssimilation	![ g -> k || [p | k ] %> _ ]
.o.
mAssimilation ![ NonUvular -> m || Vow _ %> m ] 
.o.
nAssimilation ![ NonUvular -> n || Vow _ %> (\Segment) n ]
.o.
kAssimilation ! [ NonUvular -> k || Vow _ %> (\Segment) k ]
.o.
lAssimilation	![ NonUvular -> l || Vow _ %> l ] 
.o.
pAssimilation	![ NonUvular -> p || Vow _ %> p ]
.o.
rAssimilation	![ NonUvular -> r || Vow _ %> r ]  
.o.
sAssimilation	![ NonUvular -> s || Vow _ [ %> | %ROD ] s ]
.o.
tAssimilation	![ NonUvular -> t || Vow _ %> t ]
.o.
qAssimilation	![ Cns -> q || Vow _ %> (\Segment) q ] 
.o.
schwaC	![ [ i2 | i3 ] -> i || _ %> ( %TRUNC ) Cns ] 
.o.
schwaV	![ [ i2 | i3 ] -> a || _ %> ( %TRUNC ) Vow ]
.o.
schwaNULL	![ i3 -> 0 || t _ [ .#. | %CLIT ] ] 
.o.
radikalisering	![ i -> e, u -> o || _ ( %> ) ( \Segment ) Uvular ]
.o.
eafRadikalisering	![ e -> i || _ ( %> ) ( %TRUNC ) [ NonUvular | i | u | a ] ]
.o.
oafRadikalisering ![ o -> u || _ ( %> ) ( %TRUNC ) [ NonUvular | i | u | a ] ] ;
.o.
progressivVassimilering	![ Vow -> a || a [ %> | %ROD ] ( %TRUNC ) _ Cns ]
.o.
TclitisU	![ t -> n || _ %CLIT [ u | a ] ]
.o.
Tclitisg1	![ [ t | p | k ] -> n || _ %CLIT g ] 
.o.
Tclitisg2	![ g -> n g || n %CLIT _ ]
.o.
clitisLAssimilation	![ Cns -> l || _ %CLIT l ] 
.o.
clitisMAssimilation	![ Cns -> m || _ %CLIT m ]
.o.
clitisVAssimilation	![ Vow -> a || a %CLIT _ ] 
.o.
clitisQFrikativisering	![ q -> r || _ %CLIT [ m | l ] ]
.o.
clitis3cons	![ NonUvular -> 0 || _ %CLIT t t ]
.o.
clitisNasalisering	! [ k -> n g || _ %CLIT Vow ] 
.o.
aasiit2Vokal	![ a ( %> ) ( %TRUNC ) a -> a a j || _ %CLIT a a ]
.o.
aasiit1Vokal	![ a -> 0 || _ %CLIT a a ] 
.o.
kaNasalisering ![ k %> a -> n g a ]
.o.
kiNasalisering ![ k %> i -> n g i ]
.o.
IngenArkefonemer	![ i2 -> i, i3 -> i, t2 -> t, g2 -> g ]
.o.
DummyDeletion	![ Dummy -> 0 ]
.o.
tAssibilering ![ t t -> t s || _ [ i | e ]  en rent ortografisk regel
.o.
vSlet ] ;	![ v -> 0 || u _ [ i | e | a ] ] en anden rent ortografisk regel
